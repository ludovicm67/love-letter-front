{"version":3,"sources":["utils.js","scenes/LoginContainer/components/Login/components/Form/index.js","scenes/LoginContainer/components/Login/index.js","scenes/LoginContainer/components/Register/components/Form/index.js","components/StyledLink/index.js","scenes/LoginContainer/components/Register/index.js","scenes/LoginContainer/index.js","scenes/MenuContainer/components/MainMenu/index.js","scenes/MenuContainer/components/NewGame/index.js","scenes/MenuContainer/components/WaitGame/index.js","scenes/MenuContainer/components/JoinGame/index.js","scenes/MenuContainer/components/Help/index.js","scenes/MenuContainer/components/Histori/index.js","scenes/MenuContainer/components/Game/style.js","scenes/MenuContainer/components/Game/index.js","scenes/MenuContainer/components/Credits/index.js","scenes/MenuContainer/index.js","App.js","scenes/MenuContainer/components/Help/messages.js","messages.js","index.js"],"names":["colors","getLanguage","locale","navigator","languages","language","userLanguage","substring","login","token","user","localStorage","setItem","name","points","window","location","replace","logout","removeItem","API_URL","process","HEADERS","Content-Type","api_logout","url","concat","getItem","axios","get","then","catch","echo","Echo","broadcaster","host","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeypress","e","key","handleLogin","handleNameChange","setState","target","value","handlePasswordChange","password","state","bind","assertThisInitialized","data","FormData","append","post","headers","response","success","console","log","error","api_login","formStyle","padding","label","display","margin","input","minHeight","minWidth","marginBottom","submit","height","marginTop","border","borderRadius","fontWeight","fontSize","backgroundColor","color","cursor","@media (max-width: 768px)","react_default","a","createElement","style","id","index_es","onChange","type","onKeyPress","onClick","Component","injectIntl","Radium","Login","loginStyle","container","title","textAlign","link","textDecoration","components_Form","Link","to","messages","defineMessages","passwordError","handleRegister","length","validPassword","props","intl","formatMessage","email","api_register","errors","StyledLink","linkStyle","msgId","Register","registerStyle","Register_components_Form","StyledLink_StyledLink","LoginContainer","_Component","apply","arguments","inherits","createClass","justifyContent","width","@media (max-width: 1200px)","@media (max-width: 992px)","flexDirection","left","span","marginLeft","slogan","right","maxWidth","maxHeight","BrowserRouter","Route","exact","path","component","MainMenu","setHomeButton","api_refresh","menuStyle","lineHeight","icon","text","className","NewGame","slot2","slot3","slot4","handleChange","createGame","_this2","userToken","json","Error","history","push","pathname","game","reload","parseInt","dataset","slot","newGameStyle","textColor","cellule","table","buttonStyle","center","select","data-slot","WaitGame","creator","players","slots","started","channel","listen","content","waitGameStyle","widht","@media (maxWidth: 768px)","player1","player2","player3","player4","hasOwnProperty","JoinGame","games","leave","gameId","_this3","joinGameStyle","div_table","overflowY","play","hide","map","Array","isArray","indexOf","Math","random","action","deleteGame","joinGame","objectSpread","cardsLocale","cardsPath","interfacePath","cardsPathSoldier","cardsPathClown","cardsPathGeneral","cardsPathKnight","cardsPathMinister","cardsPathPriest","cardsPathSorcerer","cardsPathPrincesse","interfacePathClown","interfacePathPerdu","interfacePathSelect","interfacePathCreation","interfacePathPlateauJeu","interfacePathRejoindre","Help","styleHelp","div_style","marginRight","image","image_inter","borderCollapse","borderColor","borderStyle","borderWidth","t1","t2","t3","t4","p_style","ul","listStyleType","src","alt","Histori","historyStyle","@media (min-width: 1201px)","columnCount","gameStyle","position","piocheContainer","bottom","zIndex","retired_container","cards","selection","top","transform","boxShadow","button","event","my_infos","round","paddingLeft","score","me_playing","immunity","played_card","me","card","showHand","light","played","pioche","player","row","column","alignItems","Game","handleChooseCard","chosenCard","handleChoosePlayer","chosenPlayer","choosePlayer","chooseCard","card_played","allChosen","eliminatedEvent","attackFrom","endRoundEvent","reason","winner","endGameEvent","eliminated_player","eliminator_player","self","setTimeout","reason_end","winner_name","cardAction","playGame","setAllChosen","componentWillMount","require","hand","choose_card_name","choose_players","chosen_player","chosen_card","played_card_value","cardName","toLowerCase","myCardsStyle","myTurn","playersSelectList","game_infos","_this$state","playersSelect","_this$state$game","current_round","winning_rounds","players_cards","played_cards","number_pile","pile","styleMap","twoPlayers","nbPlayers","current_players","i","filter","current_player","p","index","handleCardName","card_name","winning_rounds_count","number","Credits","CreditsStyle","list","linkContainer","links","aria-label","href","aria-hidden","MenuContainer","homeButton","bool","paddingTop","paddingBottom","toMenu","render","components_MainMenu","Redirect","App","appStyle","fontFamily","style_root","page","Help_messages","fr","backToMenu","gameRules","gameGoal","overviewGame","soldier","clown","knight","priest","sorcerer","general","minister","princess","nb_exemp","gameProgress","t","list1","list2","t5","t6","nb_player","nb_points","interface","create","join","lost","en","titleSpan","linkToRegister","nameLabel","passwordLabel","submitButton","linkToLogin","linkToJouer","linkToRejoindre","linkToHelp","linkToOptions","startLink","IA_easy","IA_normal","none","waiting","waitingPlayer","joinLink","delete","salon","Rankings","help","text1","text2","text3","text4","text5","text6","wonGames","playing","me_immunity","chooseACard","chooseAPlayer","choosePlayerCard","auto_eliminated","eliminated_by","eliminated_with","winnerByElimination","winnerByEmptyPile","winnerOfGame","rounds","rounds_2","princess_prince","noPlayer","hand0","hand1","hand2","hand3","played_card0","played_card1","played_card2","played_card3","addLocaleData","toConsumableArray","ReactDOM","flattenMessages","nestedMessages","prefix","undefined","keys","reduce","prefixedKey","assign","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.df91e1f1.chunk.js","sourcesContent":["import axios from 'axios';\nimport Echo from 'laravel-echo';\n\n/************/\n/***CONSTS***/\n/************/\n\n// constantes utilisées dans toute l'application\nexport const mailRegex = /^([a-zA-Z0-9_.+-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n//styles (pour l'instant constantes, à terme variables)\nexport const colors = {\n  blackColor: '#505157', //gris foncé\n  lightMainColor: '#5EACC6', //bleu clair\n  darkMainColor: '#227A94', //bleu-vert\n  secondColor: '#A693E3', //violet pâle\n  whiteColor: '#F5EFFF', //blanc\n};\n\n/**********/\n/***I18N***/\n/**********/\n\n// allow a nested structure in messages.js\nexport const flattenMessages = (nestedMessages, prefix = '') => {\n  if (nestedMessages == null) {\n    return {};\n  }\n\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    let value = nestedMessages[key];\n    let prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value;\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n};\n\nexport const getLanguage = () => {\n  let locale =\n    (navigator.languages && navigator.languages[0]) ||\n    navigator.language ||\n    navigator.userLanguage ||\n    'fr';\n\n  //ignore region code & set french to default language\n  if (locale.substring(0, 2) === 'en') {\n    locale = 'en';\n  } else {\n    locale = 'fr';\n  }\n\n  return locale;\n};\n\n/*************/\n/***STORAGE***/\n/*************/\n\nconst login = (token, user) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('name', user.name);\n  localStorage.setItem('points', user.points);\n  window.location.replace('/');\n};\n\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('name');\n  localStorage.removeItem('points');\n  window.location.replace('/login');\n};\n\n/*********/\n/***API***/\n/*********/\n\nexport const API_URL = process.env.REACT_APP_API_URL;\nconst HEADERS = { 'Content-Type': 'application/x-www-form-urlencoded' };\n\nexport const api_register = (name, password) => {\n  const url = `${API_URL}/register`;\n\n  const data = new FormData();\n  data.append('name', name);\n  data.append('password', password);\n\n  axios\n    .post(url, data, { headers: HEADERS })\n    .then(response => {\n      if (response.data.success) {\n        login(response.data.data.token, response.data.data.user);\n      } else {\n        // @TODO: add error message for the user\n        console.log('ERROR:', response.data.error);\n      }\n    })\n    .catch(error => {\n      // @TODO: add error message for the user\n      console.log(error);\n    });\n};\n\nexport const api_login = (name, password) => {\n  const url = `${API_URL}/login`;\n\n  const data = new FormData();\n  data.append('name', name);\n  data.append('password', password);\n\n  axios\n    .post(url, data, { headers: HEADERS })\n    .then(response => {\n      if (response.data.success) {\n        login(response.data.data.token, response.data.data.user);\n        console.log(response.data);\n      } else {\n        // @TODO: add error message for the user\n        console.log('ERROR:', response.data.error);\n      }\n    })\n    .catch(error => {\n      // @TODO: add error message for the user\n      console.log(error);\n    });\n};\n\nexport const api_logout = () => {\n  const url = `${API_URL}/logout?token=${localStorage.getItem('token')}`;\n  axios\n    .get(url)\n    .then(logout)\n    .catch(logout);\n};\n\nexport const api_refresh = () => {\n  const url = `${API_URL}/me?token=${localStorage.getItem('token')}`;\n\n  axios\n    .get(url)\n    .then(response => {\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.data.token);\n        localStorage.setItem('name', response.data.data.user.name);\n        localStorage.setItem('points', response.data.data.user.points);\n      } else {\n        console.log('ERROR:', response.data.error);\n        window.location.replace('/login');\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      window.location.replace('/login');\n    });\n};\n\nexport const echo = new Echo({\n  broadcaster: 'socket.io',\n  host: process.env.REACT_APP_SOCK_URL.replace(/^(https?)?:\\/\\//, ''),\n});\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { injectIntl } from 'react-intl';\nimport Radium from 'radium';\n\nimport { api_login, colors } from '../../../../../../utils';\n\n/**********************/\n/***FORMULAIRE LOGIN***/\n/**********************/\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      password: '',\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleKeypress = e => {\n    if (e.key === 'Enter') {\n      this.handleLogin();\n    }\n  };\n\n  handleLogin() {\n    api_login(this.state.name, this.state.password);\n  }\n\n  handleNameChange = e => {\n    this.setState({ name: e.target.value });\n  };\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  render() {\n    let { handleLogin, handleNameChange, handlePasswordChange, state } = this;\n\n    let formStyle = {\n      padding: '30px 0',\n\n      label: {\n        display: 'block',\n        margin: '10px 0',\n      },\n      input: {\n        minHeight: '25px',\n        minWidth: '70%',\n        marginBottom: '10px',\n      },\n      submit: {\n        display: 'block',\n        height: '40px',\n        marginTop: '20px',\n        border: 'none',\n        borderRadius: '1px',\n        fontWeight: '600',\n        fontSize: '0.8em',\n        backgroundColor: colors.darkMainColor,\n        color: colors.whiteColor,\n        cursor: 'pointer',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: '20px auto 40px auto',\n        },\n      },\n    };\n\n    return (\n      <form style={formStyle}>\n        <label id=\"name\" style={formStyle.label}>\n          <FormattedMessage id=\"Login.Form.nameLabel\" />\n        </label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleNameChange}\n          style={formStyle.input}\n        />\n\n        <label id=\"password\" style={formStyle.label}>\n          <FormattedMessage id=\"Login.Form.passwordLabel\" />\n        </label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          onChange={handlePasswordChange}\n          style={formStyle.input}\n          onKeyPress={this.handleKeypress}\n        />\n\n        <button type=\"button\" onClick={handleLogin} style={formStyle.submit}>\n          <FormattedMessage id=\"Login.Form.submitButton\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default injectIntl(Radium(Form));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Radium from 'radium';\n\nimport Form from './components/Form/';\nimport { colors } from '../../../../utils';\n\n/*******************/\n/***PAGE DE LOGIN***/\n/*******************/\n\nclass Login extends Component {\n  render() {\n    var loginStyle = {\n      container: {\n        padding: '50px',\n        fontSize: '1.2em',\n\n        //phone\n        '@media (max-width: 768px)': {\n          padding: '0 10px',\n        },\n      },\n\n      title: {\n        textAlign: 'center',\n        marginBottom: '10%',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: 0,\n          fontSize: '0.8em',\n        },\n      },\n\n      link: {\n        textDecoration: 'none',\n        color: colors.whiteColor,\n      },\n    };\n\n    return (\n      <div style={loginStyle.container}>\n        <h1 style={loginStyle.title}>\n          <FormattedMessage id=\"Login.title\" />\n        </h1>\n\n        <Form />\n\n        <Link to=\"/register\" style={loginStyle.link}>\n          <FormattedMessage id=\"Login.linkToRegister\" />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Radium(Login);\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Radium from 'radium';\n\nimport { api_register, colors } from '../../../../../../utils';\n\nconst messages = defineMessages({\n  passwordError: {\n    id: 'Register.Form.passwordError',\n  },\n});\n\n/*************************/\n/***FORMULAIRE REGISTER***/\n/*************************/\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      validPassword: '',\n    };\n\n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleKeypress = e => {\n    if (e.key === 'Enter') {\n      this.handleRegister();\n    }\n  };\n\n  handleRegister() {\n    api_register(this.state.name, this.state.password, this.state.email);\n  }\n\n  handleNameChange = e => {\n    this.setState({ name: e.target.value });\n  };\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n\n    if (e.target.value.length >= 6) {\n      this.setState({ validPassword: '' });\n    } else {\n      this.setState({\n        validPassword: this.props.intl.formatMessage(messages.passwordError),\n      });\n    }\n  };\n\n  render() {\n    let {\n      state,\n      handleNameChange,\n      handlePasswordChange,\n      handleRegister,\n    } = this;\n\n    let formStyle = {\n      padding: '30px 0',\n\n      label: {\n        display: 'block',\n        margin: '10px 0',\n      },\n      input: {\n        minHeight: '25px',\n        minWidth: '70%',\n        marginBottom: '10px',\n      },\n      submit: {\n        display: 'block',\n        height: '40px',\n        marginTop: '20px',\n        border: 'none',\n        borderRadius: '1px',\n        fontWeight: '600',\n        fontSize: '0.8em',\n        backgroundColor: colors.darkMainColor,\n        color: colors.whiteColor,\n        cursor: 'pointer',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: '20px auto 40px auto',\n        },\n      },\n      errors: {\n        color: 'red',\n        display: 'block',\n      },\n    };\n\n    return (\n      <form style={formStyle}>\n        <label id=\"name\" style={formStyle.label}>\n          <FormattedMessage id=\"Register.Form.nameLabel\" />\n        </label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleNameChange}\n          style={formStyle.input}\n        />\n\n        <label id=\"password\" style={formStyle.label}>\n          <FormattedMessage id=\"Register.Form.passwordLabel\" />\n        </label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          onChange={handlePasswordChange}\n          style={formStyle.input}\n          onKeyPress={this.handleKeypress}\n        />\n        <span style={formStyle.errors}>{state.validPassword}</span>\n\n        <button type=\"button\" onClick={handleRegister} style={formStyle.submit}>\n          <FormattedMessage id=\"Register.Form.submitButton\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default injectIntl(Radium(Form));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { colors } from '../../utils';\n\nexport default class StyledLink extends Component {\n  render() {\n    var linkStyle = {\n      textDecoration: 'none',\n      color: colors.whiteColor,\n      display: 'block',\n    };\n\n    return (\n      <Link to={this.props.to} style={linkStyle}>\n        <FormattedMessage id={this.props.msgId} />\n      </Link>\n    );\n  }\n}\n\nStyledLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  msgId: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Radium from 'radium';\n\nimport Form from './components/Form/';\nimport { StyledLink } from '../../../../components/';\n\n/********************************/\n/***PAGE DE CREATION DE COMPTE***/\n/********************************/\n\nclass Register extends Component {\n  render() {\n    var registerStyle = {\n      container: {\n        padding: '50px',\n        fontSize: '1.2em',\n\n        //phone\n        '@media (max-width: 768px)': {\n          padding: '0 10px',\n        },\n      },\n\n      title: {\n        textAlign: 'center',\n        marginBottom: '5%',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: 0,\n          fontSize: '0.8em',\n        },\n      },\n    };\n\n    return (\n      <div style={registerStyle.container}>\n        <h1 style={registerStyle.title}>\n          <FormattedMessage id=\"Register.title\" />\n        </h1>\n\n        <Form />\n\n        <StyledLink to=\"/login\" msgId=\"Register.linkToLogin\" />\n      </div>\n    );\n  }\n}\n\nexport default Radium(Register);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Radium from 'radium';\n\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nimport { colors } from '../../utils';\n\n/*****************************/\n/***CONTENEUR PAGE DE LOGIN***/\n/*****************************/\n\nexport class LoginContainer extends Component {\n  render() {\n    var loginStyle = {\n      display: 'flex',\n      justifyContent: 'space-between',\n      margin: 'auto',\n      height: '100vh',\n      width: '80vw',\n\n      //laptop\n      '@media (max-width: 1200px)': {\n        width: '95vw',\n      },\n      //tablet\n      '@media (max-width: 992px)': {},\n      //phone\n      '@media (max-width: 768px)': {\n        flexDirection: 'column',\n        width: '100vw',\n      },\n\n      left: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        color: colors.blackColor,\n\n        //laptop\n        '@media (max-width: 1200px)': {},\n        //tablet\n        '@media (max-width: 992px)': {\n          fontSize: '0.8em',\n        },\n        //phone\n        '@media (max-width: 768px)': {\n          fontSize: '0.4em',\n          textAlign: 'center',\n          margin: '5px auto',\n        },\n\n        title: {\n          fontSize: '7em',\n          span: {\n            display: 'block',\n            marginLeft: '40%',\n\n            //phone\n            '@media (max-width: 768px)': {\n              marginLeft: 0,\n            },\n          },\n        },\n        slogan: {\n          fontSize: '2em',\n          textAlign: 'right',\n\n          //phone\n          '@media (max-width: 768px)': {\n            textAlign: 'center',\n          },\n        },\n      },\n\n      right: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        maxWidth: '500px',\n        maxHeight: '75vh',\n        backgroundColor: colors.lightMainColor,\n        borderRadius: '3px',\n        marginTop: '150px',\n\n        //laptop\n        '@media (max-width: 1200px)': {\n          maxWidth: '50vw',\n          width: '50%',\n          maxHeight: '95vh',\n          marginTop: '2.5vh',\n        },\n        //tablet\n        '@media (max-width: 992px)': {\n          fontSize: '1.3em',\n        },\n        //phone\n        '@media (max-width: 768px)': {\n          fontSize: '1.2em',\n          width: '100vw',\n          maxWidth: '100vw',\n          height: '90vh',\n          textAlign: 'center',\n        },\n      },\n    };\n\n    return (\n      <div style={loginStyle}>\n        <div style={loginStyle.left}>\n          <h1 style={loginStyle.left.title}>\n            <FormattedMessage id=\"LoginContainer.title\" />\n\n            <span style={loginStyle.left.title.span}>\n              <FormattedMessage id=\"LoginContainer.titleSpan\" />\n            </span>\n          </h1>\n\n          <h2 style={loginStyle.left.slogan}>\n            <FormattedMessage id=\"LoginContainer.slogan\" />\n          </h2>\n        </div>\n\n        <Router>\n          <div style={loginStyle.right}>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default Radium(LoginContainer);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Radium from 'radium';\nimport PropTypes from 'prop-types';\n\nimport '../../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport { StyledLink } from '../../../../components/';\n\nimport { colors, api_refresh } from '../../../../utils';\n\nclass MainMenu extends Component {\n  componentWillMount() {\n    this.props.setHomeButton(true);\n    api_refresh();\n  }\n\n  componentWillUnmount() {\n    this.props.setHomeButton(false);\n  }\n\n  render() {\n    var menuStyle = {\n      marginTop: '15vh',\n      textAlign: 'center',\n      fontSize: '2em',\n      lineHeight: '1.5',\n\n      '@media (max-width: 992px)': {\n        marginTop: '1em',\n      },\n      //phone\n      '@media (max-width: 768px)': {\n        marginTop: '1em',\n        fontSize: '1.5em',\n      },\n\n      icon: {\n        color: colors.whiteColor,\n        fontSize: '1.5em',\n        margin: '1em',\n        '@media (max-width: 768px)': {\n          margin: '0.5em',\n        },\n      },\n      text: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        margin: '6em auto 0 auto',\n\n        //laptop\n        '@media (max-width: 1200px)': {\n          margin: '4em auto 0 auto',\n        },\n\n        '@media (max-width: 768px)': {\n          flexDirection: 'column',\n          margin: '1em auto 0 auto',\n        },\n      },\n    };\n\n    return (\n      <div style={menuStyle}>\n        <StyledLink to=\"/jouer\" msgId=\"MainMenu.linkToJouer\" />\n        <StyledLink to=\"/rejoindre\" msgId=\"MainMenu.linkToRejoindre\" />\n\n        <Link to=\"/credits\">\n          <span style={menuStyle.icon} className=\"fa fa-list-ul\" />\n        </Link>\n\n        <Link to=\"/aide\">\n          <span style={menuStyle.icon} className=\"fa fa-question\" />\n        </Link>\n\n        <Link to=\"/histoire\">\n          <span style={menuStyle.icon} className=\"fa fa-book\" />\n        </Link>\n\n        <div style={menuStyle.text}>\n          <span>{localStorage.getItem('name')}</span>\n          <span>\n            {localStorage.getItem('points')}{' '}\n            <FormattedMessage id=\"MainMenu.points\" />\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nMainMenu.propTypes = {\n  setHomeButton: PropTypes.func.isRequired,\n};\n\nexport default Radium(MainMenu);\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { API_URL, colors } from '../../../../utils';\n\nexport class NewGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      slot2: 0,\n      slot3: 0,\n      slot4: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.createGame = this.createGame.bind(this);\n  }\n\n  createGame() {\n    const userToken = localStorage.getItem('token');\n    const data = new FormData();\n    data.append('slot2', this.state.slot2);\n    data.append('slot3', this.state.slot3);\n    data.append('slot4', this.state.slot4);\n    axios\n      .post(`${API_URL}/game/create?token=${userToken}`, data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .then(response => response.data)\n      .then(json => {\n        if (!json.success) {\n          throw new Error('unable to create game');\n        }\n        this.props.history.push({\n          pathname: '/attente',\n          state: {\n            game: json.data.game,\n          },\n        });\n      })\n      .catch(() => {\n        console.error('unable to create game');\n        this.props.history.push('/login');\n        window.location.reload();\n      });\n  }\n\n  handleChange(e) {\n    switch (parseInt(e.target.dataset.slot, 10)) {\n      case 0:\n        this.setState({ slot2: e.target.value });\n        break;\n      case 1:\n        this.setState({ slot3: e.target.value });\n        break;\n      case 2:\n        this.setState({ slot4: e.target.value });\n        break;\n      default:\n    }\n  }\n\n  render() {\n    let { formatMessage } = this.props.intl;\n\n    var newGameStyle = {\n      fontSize: '1.8em',\n      lineHeight: '1.5',\n      textColor: colors.blackColor,\n\n      title: {\n        fontSize: '1.5em',\n        textAlign: 'center',\n      },\n\n      cellule: {\n        padding: '2vh',\n      },\n\n      table: {\n        margin: 'auto',\n      },\n\n      buttonStyle: {\n        backgroundColor: colors.darkMainColor,\n        border: 'none',\n        fontSize: '1em',\n        cursor: 'pointer',\n      },\n\n      center: {\n        textAlign: 'center',\n      },\n\n      select: {\n        border: 'none',\n        borderRadius: '4px',\n        backgroundColor: colors.whiteColor,\n        fontSize: '0.8em',\n      },\n    };\n\n    return (\n      <div style={newGameStyle}>\n        <h1 style={newGameStyle.title}>\n          <FormattedMessage id=\"NewGame.title\" />\n        </h1>\n\n        <table style={newGameStyle.table}>\n          <tbody>\n            <tr>\n              <td style={newGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player1\" />\n              </td>\n              <td style={newGameStyle.cellule}>\n                {localStorage.getItem('name')}\n              </td>\n            </tr>\n            <tr>\n              <td style={newGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player2\" />\n              </td>\n              <td style={newGameStyle.cellule}>\n                <form>\n                  <select\n                    style={newGameStyle.select}\n                    data-slot=\"0\"\n                    value={this.state.slot2}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"0\">\n                      {formatMessage({ id: 'NewGame.player' })}\n                    </option>\n                    <option value=\"1\">\n                      {formatMessage({ id: 'NewGame.IA_easy' })}\n                    </option>\n                    <option value=\"2\">\n                      {formatMessage({ id: 'NewGame.IA_normal' })}\n                    </option>\n                  </select>\n                </form>\n              </td>\n            </tr>\n            <tr>\n              <td style={newGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player3\" />\n              </td>\n              <td style={newGameStyle.cellule}>\n                <form>\n                  <select\n                    style={newGameStyle.select}\n                    data-slot=\"1\"\n                    value={this.state.slot3}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"0\">\n                      {formatMessage({ id: 'NewGame.player' })}\n                    </option>\n                    <option value=\"1\">\n                      {formatMessage({ id: 'NewGame.IA_easy' })}\n                    </option>\n                    <option value=\"2\">\n                      {formatMessage({ id: 'NewGame.IA_normal' })}\n                    </option>\n                    <option value=\"-1\">\n                      {formatMessage({ id: 'NewGame.none' })}\n                    </option>\n                  </select>\n                </form>\n              </td>\n            </tr>\n            <tr>\n              <td style={newGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player4\" />\n              </td>\n              <td style={newGameStyle.cellule}>\n                <form>\n                  <select\n                    style={newGameStyle.select}\n                    data-slot=\"2\"\n                    value={this.state.slot4}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"0\">\n                      {formatMessage({ id: 'NewGame.player' })}\n                    </option>\n                    <option value=\"1\">\n                      {formatMessage({ id: 'NewGame.IA_easy' })}\n                    </option>\n                    <option value=\"2\">\n                      {formatMessage({ id: 'NewGame.IA_normal' })}\n                    </option>\n                    <option value=\"-1\">\n                      {formatMessage({ id: 'NewGame.none' })}\n                    </option>\n                  </select>\n                </form>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p style={newGameStyle.center}>\n          <button onClick={this.createGame} style={newGameStyle.buttonStyle}>\n            <FormattedMessage id=\"NewGame.startLink\" />\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(NewGame);\n","import React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { colors, echo } from '../../../../utils';\n\nexport class WaitGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: {\n        id: '',\n        creator: {\n          name: '',\n        },\n        players: [\n          {\n            name: '',\n          },\n        ],\n        slots: [0, 0, 0],\n        started: false,\n      },\n    };\n\n    // if got game props from other location\n    if (this.props.location.state && this.props.location.state.game) {\n      this.state.game = this.props.location.state.game;\n    }\n\n    // if no game informations, the redirect to the homepage\n    if (this.state.game.id === '') {\n      this.props.history.push({\n        pathname: '/',\n      });\n    }\n\n    // if game was already started\n    if (this.state.game.started) {\n      this.props.history.push({\n        pathname: '/jeu',\n        state: this.state,\n      });\n    }\n\n    echo\n      .channel(`channel-game:${this.state.game.id}`)\n      .listen('UpdateGameEvent', e => {\n        this.setState({\n          game: e.content.game,\n        });\n      })\n      .listen('StartGameEvent', e => {\n        this.props.history.push({\n          pathname: '/jeu',\n          state: {\n            game: e.content.game,\n          },\n        });\n      });\n  }\n\n  render() {\n    let waitGameStyle = {\n      fontSize: '1.8em',\n      lineHeight: '1.5',\n      textColor: colors.blackColor,\n\n      title: {\n        fontSize: '1.5em',\n        textAlign: 'center',\n      },\n\n      cellule: {\n        padding: '2vh',\n      },\n\n      table: {\n        margin: 'auto',\n      },\n\n      buttonStyle: {\n        backgroundColor: colors.darkMainColor,\n        border: 'none',\n        fontSize: '1em',\n        cursor: 'pointer',\n      },\n\n      center: {\n        textAlign: 'center',\n      },\n\n      select: {\n        border: 'none',\n        borderRadius: '4px',\n        backgroundColor: colors.whiteColor,\n        fontSize: '0.8em',\n        widht: '100%',\n      },\n\n      icon: {\n        color: colors.whiteColor,\n        fontSize: '1.5em',\n        margin: '1em',\n        '@media (maxWidth: 768px)': {\n          margin: '0.5em',\n        },\n      },\n    };\n\n    let player1 = this.state.game.players[0].name;\n    let player2 = '';\n    let player3 = '';\n    let player4 = '';\n\n    if (this.state.game.hasOwnProperty('slots')) {\n      // player2\n      switch (this.state.game.slots[0]) {\n        case -1:\n          player2 = 'X';\n          break;\n        case -2:\n        case 0:\n          player2 =\n            this.state.game.players.length > 1 ? (\n              this.state.game.players[1].name\n            ) : (\n              <FormattedMessage id=\"WaitGame.waitingPlayer\" />\n            );\n          break;\n        case 1:\n          player2 = <FormattedMessage id=\"WaitGame.IA_easy\" />;\n          break;\n        case 2:\n          player2 = <FormattedMessage id=\"WaitGame.IA_normal\" />;\n          break;\n        default:\n          player2 = '';\n      }\n\n      // player3\n      switch (this.state.game.slots[1]) {\n        case -1:\n          player3 = 'X';\n          break;\n        case -2:\n        case 0:\n          player3 =\n            this.state.game.players.length > 2\n              ? this.state.game.players[2].name\n              : 'En attente...';\n          break;\n        case 1:\n          player3 = 'IA';\n          break;\n        case 2:\n          player3 = 'IA++';\n          break;\n        default:\n          player3 = '';\n      }\n\n      // player4\n      switch (this.state.game.slots[2]) {\n        case -1:\n          player4 = 'X';\n          break;\n        case -2:\n        case 0:\n          player4 =\n            this.state.game.players.length > 3\n              ? this.state.game.players[3].name\n              : 'En attente...';\n          break;\n        case 1:\n          player4 = 'IA';\n          break;\n        case 2:\n          player4 = 'IA++';\n          break;\n        default:\n          player4 = '';\n      }\n    }\n\n    return (\n      <div style={waitGameStyle}>\n        <h1 style={waitGameStyle.title}>\n          <FormattedMessage id=\"NewGame.title\" />\n        </h1>\n\n        <table style={waitGameStyle.table}>\n          <tbody>\n            <tr>\n              <td style={waitGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player1\" />\n              </td>\n              <td style={waitGameStyle.cellule}>{player1}</td>\n            </tr>\n            <tr>\n              <td style={waitGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player2\" />\n              </td>\n              <td style={waitGameStyle.cellule}>{player2}</td>\n            </tr>\n            <tr>\n              <td style={waitGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player3\" />\n              </td>\n              <td style={waitGameStyle.cellule}>{player3}</td>\n            </tr>\n            <tr>\n              <td style={waitGameStyle.cellule}>\n                <FormattedMessage id=\"NewGame.player4\" />\n              </td>\n              <td style={waitGameStyle.cellule}>{player4}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p style={waitGameStyle.center}>\n          <FormattedMessage id=\"WaitGame.waiting\" />\n          <span style={waitGameStyle.icon} className=\"fa fa-spinner fa-spin\" />\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(WaitGame);\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { API_URL, echo, colors } from '../../../../utils';\nimport Radium from 'radium';\n\n//import '../../../../node_modules/font-awesome/css/font-awesome.min.css';\n\nclass JoinGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n    };\n\n    const userToken = localStorage.getItem('token');\n    axios\n      .get(`${API_URL}/game/waitlist?token=${userToken}`)\n      .then(response => response.data)\n      .then(json => {\n        if (!json.success) {\n          throw new Error('unable to get waitlist');\n        }\n        this.setState({ games: json.data.games });\n      })\n      .catch(() => {\n        console.error('unable to get waitlist');\n        this.props.history.push('/login');\n        window.location.reload();\n      });\n\n    // update games list when a new game is created/deleted somewhere\n    echo\n      .channel('channel-game-list')\n      .listen('NewGameEvent', e => {\n        this.setState({\n          games: e.content.games,\n        });\n      })\n      .listen('DeleteGameEvent', e => {\n        this.setState({\n          games: e.content.games,\n        });\n      })\n      .listen('UpdateGameInfosEvent', e => {\n        this.setState({\n          games: e.content.games,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    echo.leave('channel-game-list');\n  }\n\n  joinGame(game) {\n    const userToken = localStorage.getItem('token');\n    const data = new FormData();\n\n    data.append('game_id', game.id);\n    axios\n      .post(`${API_URL}/game/join?token=${userToken}`, data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .then(response => response.data)\n      .then(json => {\n        if (!json.success) {\n          throw new Error('unable to join the game');\n        }\n        this.props.history.push({\n          pathname: '/attente',\n          state: { game: json.data.game },\n        });\n      })\n      .catch(() => {\n        console.error('unable to join the game');\n      });\n  }\n\n  deleteGame(gameId) {\n    const userToken = localStorage.getItem('token');\n    const data = new FormData();\n    data.append('game_id', gameId);\n    axios.post(`${API_URL}/game/delete?token=${userToken}`, data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    });\n  }\n\n  render() {\n    var joinGameStyle = {\n      fontSize: '1.8em',\n      lineHeight: '1.5',\n      textColor: colors.blackColor,\n      height: '100vh',\n\n      //laptop\n      '@media (max-width: 1200px)': {\n        fontSize: '1.3em',\n      },\n\n      title: {\n        fontSize: '1.5em',\n        textAlign: 'center',\n      },\n\n      buttonStyle: {\n        backgroundColor: colors.darkMainColor,\n        border: 'none',\n        fontSize: '1em',\n        cursor: 'pointer',\n      },\n\n      cellule: {\n        padding: '2.5vh',\n\n        //tablet\n        '@media (max-width: 992px)': {\n          padding: '1vh',\n        },\n        //phone\n        '@media (max-width: 768px)': {\n          display: 'block',\n          textAlign: 'center',\n        },\n\n        title: {\n          //phone\n          '@media (max-width: 768px)': {\n            display: 'none',\n          },\n        },\n      },\n\n      div_table: {\n        overflowY: 'auto',\n        height: '55%',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: 'auto',\n          maxWidth: '98vw',\n        },\n      },\n\n      play: {\n        textAlign: 'left',\n        marginLeft: '5vh',\n        padding: '5vh',\n\n        //phone\n        '@media (max-width: 768px)': {\n          margin: 'auto',\n        },\n      },\n\n      hide: {\n        display: 'none',\n      },\n    };\n    const games = this.state.games.map(game => {\n      if (\n        !game.hasOwnProperty('slots') ||\n        !Array.isArray(game.slots) ||\n        (game.creator.name !== localStorage.name &&\n          game.slots.indexOf(0) === -1)\n      )\n        return <tr style={joinGameStyle.hide} key={Math.random() * 4200} />;\n      let action;\n      if (game.creator.name === localStorage.name) {\n        action = (\n          <button\n            style={joinGameStyle.buttonStyle}\n            onClick={this.deleteGame.bind(this, game.id)}\n          >\n            <FormattedMessage id=\"JoinGame.delete\" />\n          </button>\n        );\n      } else {\n        action = (\n          <button\n            style={joinGameStyle.buttonStyle}\n            onClick={this.joinGame.bind(this, game)}\n          >\n            <FormattedMessage id=\"JoinGame.join\" />\n          </button>\n        );\n      }\n\n      // players\n      let player1 = game.players[0].name;\n      let player2;\n      let player3;\n      let player4;\n\n      // player2\n      switch (game.slots[0]) {\n        case -1:\n          player2 = 'X';\n          break;\n        case -2:\n        case 0:\n          player2 = game.players.length > 1 ? game.players[1].name : '';\n          break;\n        case 1:\n          player2 = <FormattedMessage id=\"JoinGame.IA_easy\" />;\n          break;\n        case 2:\n          player2 = <FormattedMessage id=\"JoinGame.IA_normal\" />;\n          break;\n        default:\n          player2 = '';\n      }\n\n      // player3\n      switch (game.slots[1]) {\n        case -1:\n          player3 = 'X';\n          break;\n        case -2:\n        case 0:\n          player3 = game.players.length > 2 ? game.players[2].name : '';\n          break;\n        case 1:\n          player3 = <FormattedMessage id=\"JoinGame.IA_easy\" />;\n          break;\n        case 2:\n          player3 = <FormattedMessage id=\"JoinGame.IA_normal\" />;\n          break;\n        default:\n          player3 = '';\n      }\n\n      // player4\n      switch (game.slots[2]) {\n        case -1:\n          player4 = 'X';\n          break;\n        case -2:\n        case 0:\n          player4 = game.players.length > 3 ? game.players[3].name : '';\n          break;\n        case 1:\n          player4 = <FormattedMessage id=\"JoinGame.IA_easy\" />;\n          break;\n        case 2:\n          player4 = <FormattedMessage id=\"JoinGame.IA_normal\" />;\n          break;\n        default:\n          player4 = '';\n      }\n\n      return (\n        <tr key={game.id}>\n          <td style={joinGameStyle.cellule}>\n            <FormattedMessage id=\"JoinGame.salon\" /> {game.creator.name}\n          </td>\n          <td style={joinGameStyle.cellule}>{player1}</td>\n          <td style={joinGameStyle.cellule}>{player2}</td>\n          <td style={joinGameStyle.cellule}>{player3}</td>\n          <td style={joinGameStyle.cellule}>{player4}</td>\n          <td style={joinGameStyle.cellule}>{action}</td>\n        </tr>\n      );\n    });\n    return (\n      <div style={joinGameStyle}>\n        <h1 style={joinGameStyle.title}>\n          <FormattedMessage id=\"JoinGame.title\" />\n        </h1>\n\n        <div style={joinGameStyle.div_table}>\n          <table style={joinGameStyle.play}>\n            <thead>\n              <tr>\n                <th style={joinGameStyle.cellule} />\n                <th\n                  style={{\n                    ...joinGameStyle.cellule,\n                    ...joinGameStyle.cellule.title,\n                  }}\n                >\n                  <FormattedMessage id=\"JoinGame.player1\" />\n                </th>\n                <th\n                  style={{\n                    ...joinGameStyle.cellule,\n                    ...joinGameStyle.cellule.title,\n                  }}\n                >\n                  <FormattedMessage id=\"JoinGame.player2\" />\n                </th>\n                <th\n                  style={{\n                    ...joinGameStyle.cellule,\n                    ...joinGameStyle.cellule.title,\n                  }}\n                >\n                  <FormattedMessage id=\"JoinGame.player3\" />\n                </th>\n                <th\n                  style={{\n                    ...joinGameStyle.cellule,\n                    ...joinGameStyle.cellule.title,\n                  }}\n                >\n                  <FormattedMessage id=\"JoinGame.player4\" />\n                </th>\n                <th style={joinGameStyle.cellule} />\n              </tr>\n            </thead>\n            <tbody>{games}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radium(JoinGame);\n","import React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Radium from 'radium';\n\nimport { getLanguage } from '../../../../utils';\n\nlet cardsLocale = getLanguage();\n\nlet imgPath = `images`;\nlet cardsPath = `${imgPath}/cards/${cardsLocale}`;\nlet interfacePath = `${imgPath}/help/${cardsLocale}`;\n\nlet cardsPathSoldier = `${cardsPath}/soldier.svg`;\nlet cardsPathClown = `${cardsPath}/clown.svg`;\nlet cardsPathGeneral = `${cardsPath}/general.svg`;\nlet cardsPathKnight = `${cardsPath}/knight.svg`;\nlet cardsPathMinister = `${cardsPath}/minister.svg`;\nlet cardsPathPriest = `${cardsPath}/priestess.svg`;\nlet cardsPathSorcerer = `${cardsPath}/sorcerer.svg`;\nlet cardsPathPrincesse = `${cardsPath}/princess.svg`;\n\nlet interfacePathClown = `${interfacePath}/Clown.PNG`;\nlet interfacePathPerdu = `${interfacePath}/Perdu.PNG`;\nlet interfacePathSelect = `${interfacePath}/Select.PNG`;\nlet interfacePathCreation = `${interfacePath}/Creation.PNG`;\nlet interfacePathPlateauJeu = `${interfacePath}/Plateau_Jeu.PNG`;\nlet interfacePathRejoindre = `${interfacePath}/Rejoindre.PNG`;\n\nexport class Help extends Component {\n  render() {\n    let { formatMessage } = this.props.intl;\n    var styleHelp = {\n      height: '70vh',\n      widht: '100vw',\n      overflowY: 'auto',\n\n      div_style: {\n        marginLeft: '5vw',\n        marginRight: '5vw',\n      },\n\n      image: {\n        height: '45vh',\n        marginTop: '3vh',\n        marginBottom: '3vh',\n        marginLeft: '1.5vw',\n        marginRight: '1.5vw',\n      },\n\n      image_inter: {\n        height: '45vh',\n        margin: '3vh auto',\n        borderCollapse: 'collapse',\n        borderColor: 'black',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n\n        //laptop\n        '@media (max-width: 1200px)': {\n          height: 'auto',\n          width: '80vw',\n        },\n        //phone\n        '@media (max-width: 768px)': {\n          width: '90vw',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n\n      title: {\n        t1: {\n          textAlign: 'center',\n          fontSize: '1.8em',\n        },\n        t2: {\n          fontSize: '1.5em',\n          marginLeft: '1vw',\n          marginTop: '3vh',\n          marginBottom: '3vh',\n        },\n        t3: {\n          fontSize: '1.2em',\n          marginLeft: '4vw',\n          marginTop: '2vh',\n          marginBottom: '2vh',\n        },\n        t4: {\n          fontSize: '1.1em',\n          marginLeft: '6vw',\n          marginTop: '1vh',\n          marginBottom: '1vh',\n        },\n      },\n\n      p_style: {\n        textAlign: 'justify',\n      },\n\n      table: {\n        margin: '1vh',\n        borderCollapse: 'collapse',\n        borderColor: 'black',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n      },\n\n      cellule: {\n        borderCollapse: 'collapse',\n        borderColor: 'black',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n        padding: '2.5vh',\n        textAlign: 'center',\n      },\n\n      ul: {\n        listStyleType: 'circle',\n        marginLeft: '2vw',\n      },\n    };\n    return (\n      <div style={styleHelp}>\n        <h1 style={styleHelp.title.t1}>\n          <FormattedMessage id=\"Help.title\" />\n        </h1>\n        <div style={styleHelp.div_style}>\n          <h2 style={styleHelp.title.t2}>\n            <FormattedMessage id=\"Help.gameRules.title\" />\n          </h2>\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.gameRules.gameGoal.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.gameRules.gameGoal.text\" />\n          </p>\n\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.gameRules.overviewGame.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.gameRules.overviewGame.text.t1\" />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.overviewGame.text.t2\" />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.overviewGame.text.t3\" />\n            <br />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.overviewGame.text.t4\" />\n          </p>\n          <img\n            src={cardsPathSoldier}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.soldier',\n            })}\n          />\n          <img\n            src={cardsPathClown}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.clown',\n            })}\n          />\n          <img\n            src={cardsPathKnight}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.knight',\n            })}\n          />\n          <img\n            src={cardsPathPriest}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.priest',\n            })}\n          />\n          <img\n            src={cardsPathSorcerer}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.sorcerer',\n            })}\n          />\n          <img\n            src={cardsPathGeneral}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.general',\n            })}\n          />\n          <img\n            src={cardsPathMinister}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.minister',\n            })}\n          />\n          <img\n            src={cardsPathPrincesse}\n            style={styleHelp.image}\n            alt={formatMessage({\n              id: 'Help.gameRules.overviewGame.cards.alt.princess',\n            })}\n          />\n\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.gameRules.gameProgress.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t1\" />\n          </p>\n          <table style={styleHelp.table}>\n            <thead>\n              <tr>\n                <th style={styleHelp.cellule}>\n                  <FormattedMessage id=\"Help.gameRules.gameProgress.table.nb_player\" />\n                </th>\n                <th style={styleHelp.cellule}>\n                  <FormattedMessage id=\"Help.gameRules.gameProgress.table.nb_points\" />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style={styleHelp.cellule}> 4 </td>\n                <td style={styleHelp.cellule}> 4 </td>\n              </tr>\n              <tr>\n                <td style={styleHelp.cellule}> 3 </td>\n                <td style={styleHelp.cellule}> 5 </td>\n              </tr>\n              <tr>\n                <td style={styleHelp.cellule}> 2 </td>\n                <td style={styleHelp.cellule}> 7 </td>\n              </tr>\n            </tbody>\n          </table>\n          <p style={styleHelp.p_style}>\n            <br />\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t2.t\" />\n          </p>\n          <ul style={styleHelp.ul}>\n            <li>\n              {' '}\n              <FormattedMessage id=\"Help.gameRules.gameProgress.text.t2.list1\" />{' '}\n            </li>\n            <li>\n              {' '}\n              <FormattedMessage id=\"Help.gameRules.gameProgress.text.t2.list2\" />{' '}\n            </li>\n          </ul>\n          <p style={styleHelp.p_style}>\n            <br />\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t3\" />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t4\" />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t5\" />\n            <br />\n            <FormattedMessage id=\"Help.gameRules.gameProgress.text.t6\" />\n          </p>\n\n          <h2 style={styleHelp.title.t2}>\n            <FormattedMessage id=\"Help.interface.title\" />\n          </h2>\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.interface.create.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.create.text\" />\n          </p>\n          <img\n            src={interfacePathCreation}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.create.alt',\n            })}\n          />\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.interface.join.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.join.text\" />\n          </p>\n          <img\n            src={interfacePathRejoindre}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.join.alt',\n            })}\n          />\n          <h3 style={styleHelp.title.t3}>\n            <FormattedMessage id=\"Help.interface.game.title\" />\n          </h3>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.game.text\" />\n          </p>\n          <img\n            src={interfacePathPlateauJeu}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.game.alt',\n            })}\n          />\n          <h4 style={styleHelp.title.t4}>\n            <FormattedMessage id=\"Help.interface.game.lost.title\" />\n          </h4>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.game.lost.text\" />\n          </p>\n          <img\n            src={interfacePathPerdu}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.game.lost.alt',\n            })}\n          />\n          <h4 style={styleHelp.title.t4}>\n            <FormattedMessage id=\"Help.interface.game.clown.title\" />\n          </h4>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.game.clown.text\" />\n          </p>\n          <img\n            src={interfacePathClown}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.game.clown.alt',\n            })}\n          />\n          <h4 style={styleHelp.title.t4}>\n            <FormattedMessage id=\"Help.interface.game.select.title\" />\n          </h4>\n          <p style={styleHelp.p_style}>\n            <FormattedMessage id=\"Help.interface.game.select.text\" />\n          </p>\n          <img\n            src={interfacePathSelect}\n            style={styleHelp.image_inter}\n            alt={formatMessage({\n              id: 'Help.interface.game.select.alt',\n            })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Radium(Help));\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { colors } from '../../../../utils';\nimport Radium from 'radium';\n\nexport class Histori extends Component {\n  render() {\n    var historyStyle = {\n      fontSize: '1em',\n      lineHeight: '1.5',\n      textColor: colors.blackColor,\n      height: '100vh',\n\n      title: {\n        fontSize: '1.5em',\n        textAlign: 'center',\n      },\n      p_style: {\n        height: '65vh',\n        textAlign: 'center',\n        '@media (max-width: 1200px)': {\n          width: '90vw',\n          margin: 'auto',\n        },\n      },\n      image: {\n        height: '60vh',\n        marginRight: '5vw',\n        marginLeft: '5vw',\n        '@media (max-width: 1200px)': {\n          width: '90vw',\n        },\n      },\n      div_style: {\n        height: '65vh',\n        '@media (min-width: 1201px)': {\n          columnCount: '3',\n        },\n        '@media (max-width: 1200px)': {\n          overflowY: 'auto',\n        },\n      },\n    };\n\n    let cardsPathPrincesse = `images/Princesse.svg`;\n    let cardsPathPrince = `images/Prince.svg`;\n    return (\n      <div style={historyStyle}>\n        <h1 style={historyStyle.title}>\n          <FormattedMessage id=\"Histori.title\" />\n        </h1>\n\n        <div style={historyStyle.div_style}>\n          <img\n            src={cardsPathPrincesse}\n            style={historyStyle.image}\n            alt=\"Princesse\"\n          />\n          <p style={historyStyle.p_style}>\n            <FormattedMessage id=\"Histori.text.text1\" /> <br />\n            <FormattedMessage id=\"Histori.text.text2\" /> <br />\n            <br />\n            <FormattedMessage id=\"Histori.text.text3\" /> <br />\n            <FormattedMessage id=\"Histori.text.text4\" /> <br />\n            <br />\n            <FormattedMessage id=\"Histori.text.text5\" /> <br />\n            <FormattedMessage id=\"Histori.text.text6\" /> <br />\n          </p>\n          <img src={cardsPathPrince} style={historyStyle.image} alt=\"Prince\" />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Radium(Histori);\n","import { colors } from '../../../../utils';\n\nexport const gameStyle = {\n  position: 'relative',\n  height: '100vh',\n\n  piocheContainer: {\n    position: 'fixed',\n    bottom: '240px', //space + cardHeight\n    left: '20px',\n\n    //laptop\n    '@media (max-width: 1200px)': {\n      bottom: '200px',\n    },\n    //tablet\n    '@media (max-width: 992px)': {\n      bottom: '130px',\n    },\n    //phone\n    '@media (max-width: 768px)': {\n      bottom: '50px',\n      left: '10px',\n    },\n\n    text: {\n      fontSize: '2em',\n      position: 'relative',\n      zIndex: '10',\n      color: colors.whiteColor,\n    },\n  },\n\n  retired_container: {\n    flexDirection: 'column',\n    width: '100px',\n    margin: '70px 0 0 30px',\n\n    cards: {\n      width: '100px',\n      position: 'relative',\n      marginBottom: '-120px',\n      //phone\n      '@media (max-width: 768px)': {\n        width: '70px',\n      },\n    },\n  },\n\n  selection: {\n    position: 'absolute',\n    left: '40%',\n    top: ' 35%',\n    transform: 'translate(0, -50%)',\n    zIndex: 10,\n    backgroundColor: colors.lightMainColor,\n    boxShadow: `0 0 10px 10px ${colors.whiteColor}`,\n    padding: '10px',\n\n    //phone\n    '@media (max-width: 768px)': {\n      left: '20%',\n    },\n\n    select: {\n      border: 'none',\n      borderRadius: '4px',\n      backgroundColor: colors.whiteColor,\n      fontSize: '1em',\n      marginBottom: '5px',\n      height: '1.8em',\n      padding: '0 5px',\n    },\n\n    button: {\n      backgroundColor: colors.darkMainColor,\n      border: 'none',\n      fontSize: '1em',\n      cursor: 'pointer',\n      padding: '0.5em 1em',\n      fontWeight: 700,\n      marginTop: '0.3em',\n    },\n  },\n\n  event: {\n    position: 'absolute',\n    left: '40%',\n    top: ' 35%',\n    maxWidth: '300px',\n    transform: 'translate(0, -50%)',\n    zIndex: 10,\n    fontSize: '1.5em',\n    color: colors.whiteColor,\n    padding: '10px',\n    backgroundColor: colors.secondColor,\n    boxShadow: `0 0 10px 10px ${colors.secondColor}`,\n\n    //phone\n    '@media (max-width: 768px)': {\n      left: '20%',\n      fontSize: '1em',\n      maxWidth: '200px',\n    },\n  },\n\n  my_infos: {\n    backgroundColor: colors.darkMainColor,\n    color: colors.whiteColor,\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    padding: '40px 40px 60px 40px',\n    borderRadius: '10px 0 0 0',\n\n    //tablet\n    '@media (max-width: 992px)': {\n      padding: '15px 15px 30px 15px',\n      fontSize: '0.8em',\n    },\n    //phone\n    '@media (max-width: 768px)': {\n      padding: '5px',\n      left: 0,\n      borderRadius: 0,\n    },\n\n    round: {\n      fontSize: '1.5em',\n      position: 'absolute',\n      bottom: '1em',\n\n      //tablet\n      '@media (max-width: 992px)': {\n        fontSize: '1em',\n        bottom: '10px',\n      },\n      //phone\n      '@media (max-width: 768px)': {\n        display: 'inline',\n        paddingLeft: '10px',\n        lineHeight: '3px',\n      },\n    },\n\n    name: {\n      //phone\n      '@media (max-width: 768px)': {\n        fontSize: '1em',\n        fontWeight: '800',\n        display: 'inline',\n      },\n    },\n\n    score: {\n      //phone\n      '@media (max-width: 768px)': {\n        display: 'inline',\n      },\n    },\n\n    me_playing: {\n      //phone\n      '@media (max-width: 768px)': {\n        display: 'inline',\n        paddingLeft: '10px',\n      },\n    },\n\n    immunity: {\n      //phone\n      '@media (max-width: 768px)': {\n        display: 'inline',\n      },\n    },\n  },\n\n  played_card: {\n    position: 'absolute',\n    display: 'flex',\n    zIndex: 0,\n\n    cards: {\n      width: '100px',\n      position: 'relative',\n      marginLeft: '-30px',\n      //phone\n      '@media (max-width: 768px)': {\n        marginLeft: '-55px',\n        width: '70px',\n      },\n    },\n\n    me: {\n      left: '40%',\n      //phone\n      '@media (max-width: 768px)': {\n        left: '-30vw',\n        bottom: '-5vh',\n      },\n    },\n    top: {\n      top: '10vh',\n      transform: 'rotate(180deg)',\n\n      //phone\n      '@media (max-width: 768px)': {\n        top: 0,\n      },\n    },\n    right: {\n      right: '10vw',\n      bottom: '5vh',\n      transform: 'rotate(270deg)',\n      //phone\n      '@media (max-width: 768px)': {\n        right: '20vw',\n      },\n    },\n    left: {\n      left: '10vw',\n      bottom: '5vh',\n      transform: 'rotate(90deg)',\n      //phone\n      '@media (max-width: 768px)': {\n        left: '20vw',\n      },\n    },\n  },\n\n  card: {\n    width: '140px',\n    margin: '5px',\n    //phone\n    '@media (max-width: 768px)': {\n      width: '100px',\n    },\n\n    showHand: {\n      width: '140px',\n      backgroundColor: colors.secondColor,\n      boxShadow: `0 0 5px 5px ${colors.secondColor}`,\n      borderRadius: '15px',\n      position: 'absolute',\n      left: '40%',\n      top: ' 40%',\n      transform: 'translate(0, -50%)',\n      zIndex: 10,\n\n      //phone\n      '@media (max-width: 768px)': {\n        width: '100px',\n      },\n    },\n    light: {\n      borderRadius: '15px',\n      boxShadow: `10px 10px 10px ${colors.whiteColor}`,\n      cursor: 'pointer',\n    },\n\n    left: {\n      position: 'relative',\n      left: '10px',\n      transform: 'rotate(90deg)',\n\n      //laptop\n      '@media (max-width: 1200px)': {\n        left: '-70px',\n      },\n      //tablet\n      '@media (max-width: 992px)': {\n        left: '-120px',\n      },\n    },\n    me: {\n      width: '160px',\n      position: 'relative',\n      bottom: '-15vh',\n      zIndex: 5,\n\n      //phone\n      '@media (max-width: 768px)': {\n        width: '90px',\n      },\n\n      played: {\n        position: 'absolute',\n        margin: '5vh',\n        bottom: '-55vh',\n        width: '160px',\n      },\n    },\n    right: {\n      position: 'relative',\n      left: '-10px',\n      transform: 'rotate(270deg)',\n\n      //laptop\n      '@media (max-width: 1200px)': {\n        left: '70px',\n      },\n      //phone\n      '@media (max-width: 768px)': {\n        left: '120px',\n      },\n    },\n\n    top: {\n      position: 'relative',\n      top: '-140px',\n\n      //laptop\n      '@media (max-width: 1200px)': {\n        top: '-160px',\n      },\n      //phone\n      '@media (max-width: 768px)': {\n        top: '-200px',\n      },\n    },\n\n    pioche: {\n      position: 'absolute',\n    },\n  },\n  player: {\n    name: {\n      padding: '10px',\n      fontSize: '2em',\n      fontWeight: 400,\n\n      //phone\n      '@media (max-width: 768px)': {\n        fontSize: '1em',\n        fontWeight: '800',\n        display: 'inline',\n      },\n    },\n    score: {\n      //phone\n      '@media (max-width: 768px)': {\n        width: '10px',\n        display: 'inline',\n      },\n\n      text: {\n        //phone\n        '@media (max-width: 768px)': {\n          display: 'none',\n        },\n      },\n    },\n\n    row: {\n      position: 'absolute',\n      top: '20%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n      left: {\n        text: {},\n      },\n      right: {\n        text: {},\n      },\n    },\n    column: {\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '70vh',\n      width: '100%',\n      alignItems: 'center',\n\n      me: {\n        display: 'flex',\n        flexDirection: 'row',\n        //phone\n        '@media (max-width: 768px)': {\n          position: 'absolute',\n          bottom: '20px',\n          right: '20px',\n          zIndex: 10,\n        },\n\n        text: {},\n      },\n      top: {\n        display: 'flex',\n        flexDirection: 'row',\n\n        text: {\n          position: 'absolute',\n          left: '20vw',\n\n          //laptop\n          '@media (max-width: 1200px)': {\n            top: '-40px',\n          },\n        },\n      },\n    },\n  },\n};\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { API_URL, echo, getLanguage } from '../../../../utils';\nimport { gameStyle } from './style';\nimport Radium from 'radium';\n\nlet cardsLocale = getLanguage();\n\nlet imgPath = `images`;\nlet cardsPath = `${imgPath}/cards/${cardsLocale}`;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: {\n        id: '',\n        players: [],\n      },\n      choosePlayer: false,\n      chooseCard: false,\n      chosenCard: '',\n      chosenPlayer: -1,\n      card_played: {},\n      allChosen: false,\n      showHand: null,\n      eliminatedEvent: {\n        state: false,\n        player: '',\n        attackFrom: '',\n        card: '',\n      },\n      endRoundEvent: {\n        state: false,\n        reason: '',\n        winner: '',\n      },\n      endGameEvent: {\n        state: false,\n        winner: '',\n      },\n    };\n\n    // if got game props from other location\n    if (this.props.location.state && this.props.location.state.game) {\n      this.state.game = this.props.location.state.game;\n    }\n\n    // listen to game changes\n    if (this.state.game.id !== '') {\n      echo\n        .channel(`channel-game:${this.state.game.id}`)\n        .listen('UpdateGameEvent', e => {\n          this.setState({\n            game: e.content.game,\n          });\n        })\n        .listen('EliminatedPlayerEvent', e => {\n          this.setState({\n            eliminatedEvent: {\n              state: true,\n              player: e.content.game.eliminated_player,\n              attackFrom: e.content.game.eliminator_player,\n              card: e.content.game.card,\n            },\n          });\n\n          let self = this;\n          setTimeout(function() {\n            self.setState({\n              eliminatedEvent: {\n                state: false,\n                player: '',\n                attackFrom: '',\n                card: '',\n              },\n            });\n          }, 5000);\n        })\n        .listen('EndRoundEvent', e => {\n          let reason;\n          switch (e.content.game.reason_end) {\n            case 1:\n              reason = 'empty_pile';\n              break;\n            case 2:\n            default:\n              reason = 'all_eliminated';\n          }\n\n          this.setState({\n            endRoundEvent: {\n              state: true,\n              reason: reason,\n              winner: e.content.game.winner_name,\n            },\n          });\n\n          let self = this;\n          setTimeout(function() {\n            self.setState({\n              endRoundEvent: {\n                state: false,\n                reason: null,\n                winner: '',\n              },\n            });\n          }, 5000);\n        })\n        .listen('EndGameEvent', e => {\n          this.setState({\n            endGameEvent: {\n              state: true,\n              winner: e.content.game.winner_name,\n            },\n          });\n        });\n    }\n\n    this.cardAction = this.cardAction.bind(this);\n    this.playGame = this.playGame.bind(this);\n    this.handleChooseCard = this.handleChooseCard.bind(this);\n    this.handleChoosePlayer = this.handleChoosePlayer.bind(this);\n    this.setAllChosen = this.setAllChosen.bind(this);\n    this.showHand = this.showHand.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n  }\n\n  componentWillMount() {\n    require('./style.css');\n  }\n\n  componentWillUnmount() {\n    echo.leave(`channel-game:${this.state.game.id}`);\n  }\n\n  showHand(player) {\n    if (!this.state.game.players[player].immunity) {\n      this.setState({ showHand: this.state.game.players[player].hand[0] });\n    }\n\n    let self = this;\n    setTimeout(function() {\n      self.setState({ showHand: null });\n    }, 5000);\n  }\n\n  cardAction(card) {\n    //if we have all the informations we need to play\n    if (\n      this.state.allChosen ||\n      (!card.choose_card_name && !card.choose_players)\n    ) {\n      let chosen_player = null;\n      let chosen_card = null;\n\n      if (card.choose_card_name) {\n        chosen_card = this.state.chosenCard;\n        if (chosen_player === '') return;\n      }\n\n      if (card.choose_players) {\n        chosen_player = this.state.chosenPlayer;\n        if (chosen_player === -1) return;\n      }\n\n      this.playGame('play_card', card.value, chosen_player, chosen_card);\n\n      //if played_card === clown\n      if (card.value === 2) this.showHand(chosen_player);\n\n      this.setState({ allChosen: false });\n      this.setState({ choosePlayer: false });\n      this.setState({ chooseCard: false });\n      this.setState({ chosenCard: '' });\n      this.setState({ chosenPlayer: -1 });\n    } else {\n      if (card.choose_card_name) {\n        this.setState({ card_played: card });\n        this.setState({ chooseCard: true });\n      }\n\n      if (card.choose_players) {\n        this.setState({ card_played: card });\n        this.setState({ choosePlayer: true });\n      }\n    }\n  }\n\n  setAllChosen() {\n    this.setState({ allChosen: true });\n    this.cardAction(this.state.card_played);\n  }\n\n  playGame(action, played_card_value, chosen_player, chosen_card) {\n    const userToken = localStorage.getItem('token');\n    const data = new FormData();\n\n    if (action !== 'pick_card' && action !== 'play_card') {\n      console.error('action invalide : ' + action);\n      return;\n    }\n\n    data.append('game_id', this.state.game.id);\n    data.append('action', action);\n    data.append('played_card', played_card_value);\n    data.append('choosen_player', chosen_player);\n    data.append('choosen_card_name', chosen_card);\n\n    axios.post(`${API_URL}/game/play?token=${userToken}`, data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    });\n\n    this.setState({ card_played: 0 });\n  }\n\n  handleCardName(cardName) {\n    cardName = cardName.toLowerCase();\n    if (cardName === 'princess_prince') {\n      if (Math.random() > 0.5) {\n        cardName = 'princess';\n      } else {\n        cardName = 'prince';\n      }\n    }\n\n    return cardName;\n  }\n\n  handleChooseCard = event => {\n    this.setState({ chosenCard: event.target.value });\n  };\n\n  handleChoosePlayer = event => {\n    this.setState({ chosenPlayer: event.target.value });\n  };\n\n  render() {\n    let game_infos = this.state.game;\n    let players = game_infos.players;\n    let pioche = [];\n    let myCardsStyle;\n    let myTurn;\n    let { chooseCard, choosePlayer } = this.state;\n    let { formatMessage } = this.props.intl;\n    let playersSelectList;\n    let playersSelect = [];\n    let { current_round, winning_rounds } = this.state.game;\n    let players_cards = current_round.played_cards;\n    let number_pile = this.state.game.current_round.pile.length;\n    let styleMap = { top: -1, bottom: -1, left: -1, right: -1, twoPlayers: -1 };\n    let nbPlayers = players.length;\n    let card_played = [];\n    let current_players = this.state.game.current_round.current_players;\n\n    for (let i = 0; i < nbPlayers; i++) {\n      if (players[i].name === localStorage.getItem('name')) {\n        styleMap.bottom = i;\n      } else {\n        if (styleMap.top === -1) {\n          styleMap.top = i;\n        } else if (styleMap.left === -1) {\n          styleMap.left = i;\n        } else if (styleMap.right === -1) {\n          styleMap.right = i;\n        }\n      }\n    }\n    if (nbPlayers === 2) {\n      styleMap.twoPlayers = 4;\n    }\n\n    card_played[0] = players_cards.filter(card => card[0] === 0);\n    card_played[1] = players_cards.filter(card => card[0] === 1);\n    card_played[2] = players_cards.filter(card => card[0] === 2);\n    card_played[3] = players_cards.filter(card => card[0] === 3);\n    card_played[4] = players_cards.filter(card => card[0] === -1);\n\n    if (nbPlayers === 0) {\n      return (\n        <p>\n          {' '}\n          <FormattedMessage id=\"Game.noPlayer\" />{' '}\n        </p>\n      );\n    }\n\n    let current_player = game_infos.current_player;\n    myTurn = current_player === styleMap.bottom;\n\n    if (\n      players[styleMap.bottom].hand.length === 2 &&\n      myTurn &&\n      !chooseCard &&\n      !choosePlayer\n    ) {\n      myCardsStyle = { ...gameStyle.card.me, ...gameStyle.card.light };\n    } else {\n      myCardsStyle = gameStyle.card.me;\n    }\n\n    /************/\n    /***PIOCHE***/\n    /************/\n\n    for (let i = 0; i < 5; i++) {\n      let style = {\n        ...gameStyle.card,\n        ...gameStyle.card.pioche,\n        left: `-${i * 2}px`,\n        top: `-${i}px`,\n      };\n\n      //if time to use the pile/pioche, set a halo on the last card\n      if (i === 4 && players[styleMap.bottom].hand.length === 1 && myTurn) {\n        style = { ...style, ...gameStyle.card.light };\n      }\n\n      pioche.push(\n        <img\n          key={`pioche${i}`}\n          style={style}\n          src={`${imgPath}/cards/back.svg`}\n          alt={formatMessage({ id: 'Game.alt.pile' })}\n          onClick={e => {\n            this.playGame.bind(this, 'pick_card', null, null, null);\n          }}\n        />\n      );\n    }\n\n    pioche.push(\n      <p key=\"number_pile\" style={gameStyle.piocheContainer.text}>\n        {number_pile}\n      </p>\n    );\n\n    /********************/\n    /***PLAYERS SELECT***/\n    /********************/\n\n    playersSelect.length = 0;\n\n    if (choosePlayer) {\n      playersSelectList = players.filter(function(p) {\n        let index = players.indexOf(p);\n        //check if player still in game\n        return current_players.indexOf(index) > -1;\n      });\n\n      for (let i = 0; i < playersSelectList.length; i++) {\n        //my name appears only if it's the card sorcerer\n        if (\n          (i === styleMap.bottom && this.state.card_played.value === 5) ||\n          //other names appears each time\n          i !== styleMap.bottom\n        ) {\n          playersSelect.push(\n            <option key={`playerSelect${i}${Math.random()}`} value={i}>\n              {playersSelectList[i].name}\n            </option>\n          );\n        }\n      }\n    }\n\n    return (\n      <div style={gameStyle}>\n        {(choosePlayer || chooseCard) && (\n          <div style={gameStyle.selection}>\n            {/*choose a card / choose a player*/}\n            {chooseCard && (\n              <div>\n                <form>\n                  <select\n                    style={gameStyle.selection.select}\n                    onChange={this.handleChooseCard}\n                    value={this.state.chosenCard}\n                  >\n                    <option\n                      key={`cardSelect-default-${Math.random()}`}\n                      value=\"\"\n                    >\n                      {formatMessage({ id: 'Game.chooseACard' })}\n                    </option>\n                    <option value=\"sorcerer\">\n                      {formatMessage({ id: 'Game.sorcerer' })}\n                    </option>\n                    <option value=\"minister\">\n                      {formatMessage({ id: 'Game.minister' })}\n                    </option>\n                    <option value=\"princess_prince\">\n                      {formatMessage({ id: 'Game.princess_prince' })}\n                    </option>\n                    <option value=\"priestess\">\n                      {formatMessage({ id: 'Game.priest' })}\n                    </option>\n                    <option value=\"knight\">\n                      {formatMessage({ id: 'Game.knight' })}\n                    </option>\n                    <option value=\"general\">\n                      {formatMessage({ id: 'Game.general' })}\n                    </option>\n                    <option value=\"clown\">\n                      {formatMessage({ id: 'Game.clown' })}\n                    </option>\n                  </select>\n                </form>\n              </div>\n            )}\n\n            {choosePlayer && (\n              <div>\n                <form>\n                  <select\n                    style={gameStyle.selection.select}\n                    onChange={this.handleChoosePlayer}\n                    value={this.state.chosenPlayer}\n                  >\n                    <option\n                      key={`playerSelect-default-${Math.random()}`}\n                      value=\"-1\"\n                    >\n                      {formatMessage({ id: 'Game.chooseAPlayer' })}\n                    </option>\n                    {playersSelect}\n                  </select>\n                </form>\n              </div>\n            )}\n\n            <button\n              style={gameStyle.selection.button}\n              onClick={this.setAllChosen}\n            >\n              <FormattedMessage id=\"Game.choosePlayerCard\" />\n            </button>\n          </div>\n        )}\n\n        {/*Display an opponent's hand*/}\n        <div>\n          {this.state.showHand !== null && (\n            <img\n              style={gameStyle.card.showHand}\n              src={`${cardsPath}/${this.handleCardName(\n                this.state.showHand.card_name\n              )}.svg`}\n              alt={`${formatMessage({ id: 'Game.showHand' })} ${\n                this.showHand.card_name\n              }`}\n            />\n          )}\n        </div>\n\n        {/*EVENTS*/}\n        {(this.state.eliminatedEvent.state ||\n          this.state.endRoundEvent.state ||\n          this.state.endGameEvent.state) && (\n          <div style={gameStyle.event}>\n            {/*player elimination event*/}\n            {this.state.eliminatedEvent.state &&\n              (this.state.eliminatedEvent.player ===\n              this.state.eliminatedEvent.attackFrom ? (\n                <p>\n                  {this.state.eliminatedEvent.player}\n                  <FormattedMessage id=\"Game.auto_eliminated\" />\n                  <FormattedMessage\n                    id={`Game.${this.state.eliminatedEvent.card}`}\n                  />\n                </p>\n              ) : (\n                <p>\n                  {this.state.eliminatedEvent.player}\n                  <FormattedMessage id=\"Game.eliminated_by\" />\n                  {this.state.eliminatedEvent.attackFrom}\n                  <FormattedMessage id=\"Game.eliminated_with\" />\n                  <FormattedMessage\n                    id={`Game.${this.state.eliminatedEvent.card}`}\n                  />\n                </p>\n              ))}\n\n            {/*end round event*/}\n            {this.state.endRoundEvent.state &&\n              (this.state.endRoundEvent.reason === 'all_eliminated' ? (\n                <p>\n                  <FormattedMessage id=\"Game.winnerByElimination\" />\n                  {this.state.endRoundEvent.winner}\n                </p>\n              ) : (\n                <p>\n                  <FormattedMessage id=\"Game.winnerByEmptyPile\" />\n                  {this.state.endRoundEvent.winner}\n                </p>\n              ))}\n\n            {this.state.endGameEvent.state && (\n              <p>\n                {this.state.endGameEvent.winner}\n                <FormattedMessage id=\"Game.winnerOfGame\" />\n              </p>\n            )}\n          </div>\n        )}\n\n        {/*players' cards*/}\n\n        <div style={gameStyle.player.row}>\n          {/*joueur gauche*/ styleMap.left !== -1 && (\n            <div style={gameStyle.player.row.left}>\n              <div style={gameStyle.player.row.left.text}>\n                <p style={gameStyle.player.name}>\n                  {players[styleMap.left].name}\n                </p>\n\n                <p style={gameStyle.player.score}>\n                  {players[styleMap.left].winning_rounds_count}\n                  <span style={gameStyle.player.score.text}>\n                    <FormattedMessage id=\"Game.wonGames\" />\n                  </span>\n                </p>\n                <p>\n                  {current_player === styleMap.left && (\n                    <FormattedMessage id=\"Game.playing\" />\n                  )}\n                </p>\n                <p>\n                  {players[styleMap.left].immunity && (\n                    <FormattedMessage id=\"Game.immunity\" />\n                  )}\n                </p>\n              </div>\n\n              <div style={gameStyle.card.left}>\n                {players[styleMap.left].hand.map(hand => (\n                  <img\n                    key={styleMap.left + Math.random()}\n                    style={gameStyle.card}\n                    src={`${imgPath}/cards/back.svg`}\n                    alt={formatMessage({ id: `Game.alt.hand${styleMap.left}` })}\n                  />\n                ))}\n              </div>\n\n              {/*CARDS PLAYED*/}\n              <div\n                style={{\n                  ...gameStyle.played_card,\n                  ...gameStyle.played_card.left,\n                }}\n              >\n                {card_played[styleMap.left].map(card => (\n                  <img\n                    key={styleMap.left + Math.random()}\n                    style={gameStyle.played_card.cards}\n                    src={`${cardsPath}/${this.handleCardName(\n                      card[1].card_name\n                    )}.svg`}\n                    alt={formatMessage({ id: 'Game.alt.played_card2' })}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/*joueur droite*/ styleMap.right !== -1 && (\n            <div style={gameStyle.player.row.right}>\n              <div style={gameStyle.player.row.right.text}>\n                <p style={gameStyle.player.name}>\n                  {players[styleMap.right].name}\n                </p>\n                <p style={gameStyle.player.score}>\n                  {players[styleMap.right].winning_rounds_count}\n                  <span style={gameStyle.player.score.text}>\n                    <FormattedMessage id=\"Game.wonGames\" />\n                  </span>\n                </p>\n\n                <p>\n                  {current_player === styleMap.right && (\n                    <FormattedMessage id=\"Game.playing\" />\n                  )}\n                </p>\n                <p>\n                  {players[styleMap.right].immunity && (\n                    <FormattedMessage id=\"Game.immunity\" />\n                  )}\n                </p>\n              </div>\n\n              <div style={gameStyle.card.right}>\n                {players[styleMap.right].hand.map(hand => (\n                  <img\n                    key={styleMap.right + Math.random()}\n                    style={gameStyle.card}\n                    src={`${imgPath}/cards/back.svg`}\n                    alt={formatMessage({ id: 'Game.alt.hand3' })}\n                  />\n                ))}\n              </div>\n\n              {/*CARDS PLAYED*/}\n              <div\n                style={{\n                  ...gameStyle.played_card,\n                  ...gameStyle.played_card.right,\n                }}\n              >\n                {card_played[styleMap.right].map(card => (\n                  <img\n                    key={styleMap.right + Math.random()}\n                    style={gameStyle.played_card.cards}\n                    src={`${cardsPath}/${this.handleCardName(\n                      card[1].card_name\n                    )}.svg`}\n                    alt={formatMessage({ id: 'Game.alt.played_card3' })}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div style={gameStyle.player.column}>\n          {/*joueur haut*/ styleMap.top !== -1 && (\n            <div style={gameStyle.player.column.top}>\n              <div style={gameStyle.player.column.top.text}>\n                <p style={gameStyle.player.name}>\n                  {players[styleMap.top].name}\n                </p>\n\n                <p style={gameStyle.player.score}>\n                  {players[styleMap.top].winning_rounds_count}\n                  <span style={gameStyle.player.score.text}>\n                    <FormattedMessage id=\"Game.wonGames\" />\n                  </span>\n                </p>\n\n                <p>\n                  {current_player === styleMap.top && (\n                    <FormattedMessage id=\"Game.playing\" />\n                  )}\n                </p>\n                <p>\n                  {players[styleMap.top].immunity && (\n                    <FormattedMessage id=\"Game.immunity\" />\n                  )}\n                </p>\n              </div>\n\n              <div style={gameStyle.card.top}>\n                {//@TODO FormattedMessage 'alt'\n                players[styleMap.top].hand.map(hand => (\n                  <img\n                    key={styleMap.top + Math.random()}\n                    style={gameStyle.card}\n                    src={`${imgPath}/cards/back.svg`}\n                    alt={formatMessage({ id: 'Game.alt.hand1' })}\n                  />\n                ))}\n              </div>\n\n              {/*CARDS PLAYED*/}\n              <div\n                style={{\n                  ...gameStyle.played_card,\n                  ...gameStyle.played_card.top,\n                }}\n              >\n                {card_played[styleMap.top].map(card => (\n                  <img\n                    key={styleMap.top + Math.random()}\n                    style={gameStyle.played_card.cards}\n                    src={`${cardsPath}/${this.handleCardName(\n                      card[1].card_name\n                    )}.svg`}\n                    alt={formatMessage({ id: 'Game.alt.played_card1' })}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/*joueur bas*/ styleMap.bottom !== -1 && (\n            <div style={gameStyle.player.column.me}>\n              <div>\n                {//@TODO FormattedMessage 'alt'\n                players[styleMap.bottom].hand.map(card => (\n                  <img\n                    key={styleMap.bottom + Math.random()}\n                    style={myCardsStyle}\n                    src={`${cardsPath}/${this.handleCardName(\n                      card.card_name\n                    )}.svg`}\n                    alt={formatMessage({ id: 'Game.alt.hand0' })}\n                    onClick={this.cardAction.bind(this, card)}\n                  />\n                ))}\n              </div>\n\n              {/*CARDS PLAYED*/}\n              <div\n                style={{\n                  ...gameStyle.played_card,\n                  ...gameStyle.played_card.me,\n                }}\n              >\n                {card_played[styleMap.bottom].map(card => (\n                  <img\n                    style={gameStyle.played_card.cards}\n                    key={styleMap.bottom + Math.random()}\n                    src={`${cardsPath}/${this.handleCardName(\n                      card[1].card_name\n                    )}.svg`}\n                    alt={formatMessage({ id: 'Game.alt.played_card0' })}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/*cartes retirées*/}\n        {styleMap.twoPlayers !== -1 && (\n          <div style={gameStyle.retired_container}>\n            {card_played[styleMap.twoPlayers].map(card => (\n              <img\n                key={`secretCards` + Math.random()}\n                style={gameStyle.retired_container.cards}\n                src={`${cardsPath}/${this.handleCardName(\n                  card[1].card_name\n                )}.svg`}\n                alt={formatMessage({ id: 'Game.alt.pile' })}\n              />\n            ))}\n          </div>\n        )}\n\n        {/*pioche*/}\n        <div\n          style={gameStyle.piocheContainer}\n          onClick={this.playGame.bind(this, 'pick_card', null, null, null)}\n        >\n          {pioche}\n        </div>\n\n        {/*infos du joueur actif*/}\n        <div style={gameStyle.my_infos}>\n          <p style={{ ...gameStyle.player.name, ...gameStyle.my_infos.name }}>\n            {players[styleMap.bottom].name}\n          </p>\n\n          <p style={{ ...gameStyle.player.score, ...gameStyle.my_infos.score }}>\n            {players[styleMap.bottom].winning_rounds_count}\n            <span style={gameStyle.player.score.text}>\n              <FormattedMessage id=\"Game.wonGames\" />\n              <FormattedMessage id=\"Game.rounds_2\" />\n              {winning_rounds}\n            </span>\n          </p>\n          <p style={gameStyle.my_infos.me_playing}>\n            {current_player === styleMap.bottom && (\n              <FormattedMessage id=\"Game.me_playing\" />\n            )}\n          </p>\n          <p style={gameStyle.my_infos.immunity}>\n            {players[styleMap.bottom].immunity && (\n              <FormattedMessage id=\"Game.me_immunity\" />\n            )}\n          </p>\n\n          <span style={gameStyle.my_infos.round}>\n            <FormattedMessage id=\"Game.rounds\" />\n            {current_round.number}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Radium(Game));\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Credits extends Component {\n  render() {\n    var CreditsStyle = {\n      title: {\n        textAlign: 'center',\n        fontWeight: '500',\n        fontSize: '1.8em',\n        marginBottom: '10vh',\n      },\n\n      list: {\n        textAlign: 'center',\n        fontSize: '1.3em',\n      },\n\n      linkContainer: {\n        display: 'block',\n        margin: '10px 0 20px 0',\n      },\n\n      links: {\n        display: 'inline-block',\n        fontSize: '1.3em',\n        color: '#fff',\n        textDecoration: 'none',\n        margin: '0 5px',\n      },\n    };\n\n    return (\n      <div>\n        <h1 style={CreditsStyle.title}>\n          <FormattedMessage id=\"Credits.title\" />\n        </h1>\n\n        <ul style={CreditsStyle.list}>\n          <li>\n            Ludovic Muller\n            <span style={CreditsStyle.linkContainer}>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Site personnel\"\n                href=\"https://www.ludovic-muller.fr/\"\n              >\n                <i className=\"fa fa-globe\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Github\"\n                href=\"https://github.com/ludovicm67\"\n              >\n                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte twitter\"\n                href=\"https://twitter.com/ludovicm67\"\n              >\n                <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Linkedin\"\n                href=\"https://www.linkedin.com/in/ludovicm67/\"\n              >\n                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n              </a>\n            </span>\n          </li>\n          <li>\n            Martin Heitz\n            <span style={CreditsStyle.linkContainer}>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Github\"\n                href=\"https://github.com/sylvestreee\"\n              >\n                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Linkedin\"\n                href=\"https://www.linkedin.com/in/martin-heitz-06978712b/\"\n              >\n                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n              </a>\n            </span>\n          </li>\n          <li>\n            Méline Bour-Lang\n            <span style={CreditsStyle.linkContainer}>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Site personnel\"\n                href=\"http://meline-bourlang.fr/\"\n              >\n                <i className=\"fa fa-globe\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Github\"\n                href=\"https://github.com/BourMel\"\n              >\n                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Linkedin\"\n                href=\"https://www.linkedin.com/in/m%C3%A9line-bour-lang/\"\n              >\n                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n              </a>\n            </span>\n          </li>\n          <li>\n            Morgane Ritter\n            <span style={CreditsStyle.linkContainer}>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Github\"\n                href=\"https://github.com/MorganeRitter\"\n              >\n                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n              </a>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Linkedin\"\n                href=\"https://www.linkedin.com/in/morgane-ritter/\"\n              >\n                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n              </a>\n            </span>\n          </li>\n          <li>\n            Pauline Capésius\n            <span style={CreditsStyle.linkContainer}>\n              <a\n                style={CreditsStyle.links}\n                aria-label=\"Compte Linkedin\"\n                href=\"https://www.linkedin.com/in/pauline-capésius-01a790161\"\n              >\n                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n              </a>\n            </span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Link,\n} from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Radium from 'radium';\n\nimport MainMenu from './components/MainMenu';\nimport NewGame from './components/NewGame/';\nimport WaitGame from './components/WaitGame/';\nimport JoinGame from './components/JoinGame/';\nimport Help from './components/Help/';\nimport Histori from './components/Histori/';\nimport Game from './components/Game/';\nimport Credits from './components/Credits/';\n\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport { colors, api_logout } from '../../utils';\n\n/****************************/\n/***CONTENEUR PAGE DE MENU***/\n/****************************/\n\nclass MenuContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      homeButton: true,\n    };\n\n    this.setHomeButton = this.setHomeButton.bind(this);\n  }\n\n  setHomeButton(bool) {\n    this.setState({ homeButton: bool });\n  }\n\n  toMenu() {\n    window.location = '/';\n  }\n\n  render() {\n    var menuStyle = {\n      container: {\n        backgroundColor: colors.lightMainColor,\n        height: '100vh',\n        maxWidth: '100%',\n        paddingTop: '40px',\n      },\n\n      title: {\n        textAlign: 'center',\n        fontSize: '4em',\n        paddingBottom: '30px',\n\n        //tablet\n        '@media (max-width: 992px)': {\n          fontSize: '3em',\n        },\n        //phone\n        '@media (max-width: 768px)': {\n          fontSize: '2em',\n        },\n      },\n\n      icon: {\n        color: colors.whiteColor,\n        fontSize: '3em',\n        marginLeft: '1em',\n        //phone\n        '@media (max-width: 768px)': {\n          fontSize: '2em',\n          marginBottom: '10px',\n        },\n      },\n    };\n\n    if (!localStorage.getItem('token')) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div style={menuStyle.container}>\n        {this.state.homeButton ? (\n          <Link to=\"/\" onClick={api_logout}>\n            <span style={menuStyle.icon} className=\"fa fa-sign-out\" />\n          </Link>\n        ) : (\n          <Link to=\"/\" onClick={this.toMenu}>\n            <span style={menuStyle.icon} className=\"fa fa-home\" />\n          </Link>\n        )}\n\n        <h1 className=\"AppTitle\" style={menuStyle.title}>\n          <FormattedMessage id=\"MenuContainer.title\" />\n        </h1>\n\n        <Router>\n          <div>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <MainMenu setHomeButton={this.setHomeButton} />}\n            />\n            <Route exact path=\"/jouer\" component={NewGame} />\n            <Route exact path=\"/attente\" component={WaitGame} />\n            <Route exact path=\"/rejoindre\" component={JoinGame} />\n            <Route exact path=\"/aide\" component={Help} />\n            <Route exact path=\"/histoire\" component={Histori} />\n            <Route exact path=\"/jeu\" component={Game} />\n            <Route exact path=\"/credits\" component={Credits} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default Radium(MenuContainer);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { /*FormattedMessage,*/ injectIntl } from 'react-intl';\nimport Radium, { StyleRoot } from 'radium';\n\nimport { colors } from './utils.js';\nimport './styles.css';\n\nimport LoginContainer from './scenes/LoginContainer/';\nimport MenuContainer from './scenes/MenuContainer/';\n\n/*****************/\n/****Component****/\n/*****************/\n\nclass App extends Component {\n  render() {\n    var appStyle = {\n      backgroundColor: colors.whiteColor,\n      fontFamily: 'Magra',\n      width: '100%',\n    };\n\n    return (\n      <div style={appStyle}>\n        <StyleRoot>\n          <Router>\n            <div style={appStyle.page}>\n              <Route exact path=\"/login\" component={LoginContainer} />\n              <Route exact path=\"/register\" component={LoginContainer} />\n\n              <Route path=\"/\" component={MenuContainer} />\n            </div>\n          </Router>\n        </StyleRoot>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Radium(App));\n","export default {\n  fr: {\n    title: 'Aide',\n    backToMenu: 'Retour au menu',\n    gameRules: {\n      title: 'Régles du jeu',\n      gameGoal: {\n        title: 'But du jeu :',\n        text:\n          'Le but du jeu est de faire parvenir sa lettre d’amour à la princesse en ayant une carte avec le rang plus élevé.',\n      },\n      overviewGame: {\n        title: 'Aperçu du jeu :',\n        text: {\n          t1:\n            'Chaque joueur incarne un jeune homme ou une jeune femme voulant faire parvenir une lettre à la princesse. ',\n          t2:\n            'Pour cela, les joueurs peuvent transmettre leurs lettres à des servants du château (représentés par les différentes cartes). Ce sont ces servants qui vont remettre la lettre à la princesse, ainsi le joueur ne peut garder qu’une seule carte en main. Il faudra cependant faire attention à ne pas révéler aux autres joueurs qui est la personne qui apportera la lettre ou bien les autres joueurs feront tout leur possible pour l’empêcher d’atteindre son but. ',\n          t3:\n            'Ainsi celui qui choisira la meilleure stratégie parviendra à apporter sa lettre d’amour à la princesse et gagnera la partie.',\n          t4: 'Le jeu comporte alors 16 cartes pour 8 personnages différents.',\n        },\n        cards: {\n          alt: {\n            soldier:\n              'Carte Soldat - Choisissez un joueur et un nom de carte (excepté “Soldat”). Si le joueur possède cette carte, il est éliminé.',\n            clown: 'Carte Clown - Consultez la main d’un joueur.',\n            knight:\n              'Carte Chevalier - Choisissez un joueur et comparez votre main avec la sienne. Le joueur avec la carte avec la valeur la moins élevée est éliminé.',\n            priest:\n              'Carte Prêtre - Jusqu’à votre prochain tour, vous ignorez les effets des cartes des autres joueurs',\n            sorcerer:\n              'Carte Sorcier - Choisissez un joueur ou vous-même. Le joueur sélectionné défausse sa carte et en pioche une nouvelle.',\n            general:\n              'Carte Général - Choisissez un joueur et échangez votre main avec la sienne.',\n            minister:\n              'Carte Ministre - Si vous gardez cette carte en main, calculez le total des valeurs de votre main à chaque pioche. Si celui-ci est égal ou supérieur à douze, vous êtes éliminé.',\n            princess:\n              'Carte Princesse - Si vous défaussez cette carte, vous êtes éliminé.',\n          },\n          nb_exemp: {\n            soldier: ' 5 ',\n            clown: ' 2 ',\n            knight: ' 2 ',\n            priest: ' 2 ',\n            sorcerer: ' 2 ',\n            general: ' 1 ',\n            minister: ' 1 ',\n            princess: ' 1 ',\n          },\n        },\n      },\n      gameProgress: {\n        title: 'Déroulement d’une partie :',\n        text: {\n          t1:\n            'Une partie se déroule en plusieurs manches et chaque manche rapporte un point. Pour gagner la partie, il faut donc récolter un certain nombre de points qui évoluent en fonction du nombre de joueur dans la partie.',\n          t2: {\n            t:\n              'Au début de chaque manche les 16 cartes de la pile sont mélangées et : ',\n            list1:\n              'une carte est retirée de cette pile pour une partie à plus de 2 joueurs',\n            list2:\n              'trois cartes sont retirées et visibles par les joueurs de la partie s’ils sont deux',\n          },\n          t3: 'Par la suite chaque joueur pioche une carte.',\n          t4:\n            'Lorsque c’est son tour, le joueur pioche une carte dans la pile et l’ajoute à sa main. Il doit ensuite défaussé une de ces deux cartes qui sera donc visible par les autres joueurs. L’effet de cette carte défaussée est ensuite appliqué.',\n          t5:\n            'Lorsqu’un joueur est éliminé, celui-ci doit révéler sa carte aux autres.',\n          t6:\n            'La manche se termine lorsqu’il ne reste plus qu’un seul joueur en lice ou lorsque la pioche est vide. Dans ce dernier cas, c’est le joueur ayant la carte la plus puissante qui remporte la manche.',\n        },\n        table: {\n          nb_player: 'Nombre de joueurs',\n          nb_points: 'Nombre de points requis',\n        },\n      },\n    },\n    interface: {\n      title: \"Présentation de l'interface\",\n      create: {\n        title: 'La page de création de partie',\n        text:\n          'Les parties sont de minimum de 2 joueurs. On peut choisir de faire une partie contre un ou plusieurs autres joueurs ou contre des intelligences artificiels plus ou moins difficile',\n        alt: \"Page creation d'une partie\",\n      },\n      join: {\n        title: 'La page pour rejoindre une partie',\n        text:\n          \"On peut choisir de rejoindre des parties déjà crées par d'autre joueur\",\n        alt: 'Page rejoindre une partie',\n      },\n      game: {\n        title: 'Présentation du plateau du jeu',\n        text:\n          'Le plateau de jeu comporte une pioche, notre carte, les cartes des adversaire, nos cartes jouées, les cartes jouéees pas les adversaires ainsi que le nom des adversaires, leurs nombre de manches gagnés, notre nom et nos nombres de manches gagnés',\n        alt: 'Page du plateau de jeu',\n        lost: {\n          title: 'Affichage de fin de manche',\n          text:\n            \"Lorsqu'une manche est terminé un text s'affiche précisant qui est ce qui a gagné et pour quel raison (soit la pioche est vide, soit tout les joueurs on été éliminés sauf un)\",\n          alt: 'Page du plateau de jeu perdu',\n        },\n        clown: {\n          title: \"Affichage de l'effet de la carte clown\",\n          text:\n            \"Lorsque l'on défausse une carte clown, celle-ci nous permet de voir la carte d'un adversaire qui est ainsi afficher brièvement à l'écran\",\n          alt: 'Page du plateau de jeu clown',\n        },\n        select: {\n          title: \"Choix d'une carte et/ou d'un joueur\",\n          text:\n            \"Certaines cartes nécessiste de choisir un joueur et éventuellement une carte. Ce choix s'effectue après avoir cliqué sur la carte voulue. L'effet de la carte est applliqué lorsque le formulaire est validé.\",\n          alt: \"Page du plateau de jeu choix d'une carte et/ou d'un joueur\",\n        },\n      },\n    },\n  },\n  en: {\n    title: 'Help',\n    gameRules: {\n      title: \"The game's rules\",\n      gameGoal: {\n        title: 'Goal of the game:',\n        text:\n          'The goal of the game is to send your love letter to the princess by having a card with a higher rank.',\n      },\n      overviewGame: {\n        title: 'Preview of the game:',\n        text: {\n          t1:\n            'Each player embodies a young man or a young woman wanting to send a letter to the princess. ',\n          t2:\n            'For this, players can transmit their letters to servants of the castle (represented by the different cards). It is these servants who will hand the letter to the princess, so the player can keep only one card in hand. However, care should be taken not to reveal to the other players who is the person who will bring the letter or the other players will do their utmost to prevent it from reaching its goal.',\n          t3:\n            'So whoever chooses the best strategy will manage to bring his love letter to the princess and win the game.',\n          t4: 'The game then has 16 cards for 8 different characters.',\n        },\n        cards: {\n          alt: {\n            soldier:\n              'Card Soldier - Choose a player and a card name (except “Soldier”). If the player has this card, he is eliminated.',\n            clown: 'Card Clown - Look at a player’s hand.',\n            knight:\n              'Card Knight - Choose a player and compare your hand with his hand. The player who has the card with the lowest value is eliminated.',\n            priest:\n              'Card Priest - Until you next tour, you can’t be affected by the card’s effect from the other players.',\n            sorcerer:\n              'Card Sorcerer - Choose a player or yourself. The chosen player loses his card and takes another one.',\n            general:\n              'Card General - Choose a player and exchange your hand with his hand.',\n            minister:\n              'Card Minister - If you keep this card, calculate the total of all card’s value from your hand. If this total is equal or superior to twelve, you are eliminated.',\n            princess:\n              'Card Princess - If you play this card, you are eliminated',\n          },\n          nb_exemp: {\n            soldier: ' 5 ',\n            clown: ' 2 ',\n            knight: ' 2 ',\n            priest: ' 2 ',\n            sorcerer: ' 2 ',\n            general: ' 1 ',\n            minister: ' 1 ',\n            princess: ' 1 ',\n          },\n        },\n      },\n      gameProgress: {\n        title: 'Course of a game:',\n        text: {\n          t1:\n            'A game is played in several rounds and each round earns one point. To win the game, you have to collect a certain number of points which change according to the number of players in the game.',\n          t2: {\n            t:\n              'At the beginning of each round the 16 cards of the pile are mixed and:',\n            list1:\n              'one card is removed from this stack for a game with more than 2 players',\n            list2:\n              'three cards are removed and visible by the players of the game if they are only two',\n          },\n          t3: 'Subsequently each player draws a card.',\n          t4:\n            \"When it's his turn, the player draws a card from the stack and adds it to his hand. He must then discard one of these two cards which will be visible to other players. The effect of this discarded card is then applied.\",\n          t5:\n            'When a player is eliminated, he must reveal his card to the others.',\n          t6:\n            'The round ends when there is only one player left or when the draw is empty. In the latter case, it is the player with the most powerful card who wins the round.',\n        },\n        table: {\n          nb_player: 'Numbers of players',\n          nb_points: 'Number of points required',\n        },\n      },\n    },\n    interface: {\n      title: 'Presentation of the interface',\n      create: {\n        title: 'The party creation page',\n        text:\n          'The games are at least 2 players. You can choose to play a game against one or more other players or artificial intelligences more or less difficult',\n        alt: 'Page creation party',\n      },\n      join: {\n        title: 'The page to join a party',\n        text: 'You can choose to join games already created by other players',\n        alt: 'Page join party',\n      },\n      game: {\n        title: 'Presentation of the game board',\n        text:\n          \"The game board includes a pile, our card, opponent cards, played cards, cards played by opponents, opponents' names, number of wonest races, name, and number of wins\",\n        alt: 'Page game bord',\n        lost: {\n          title: 'End of game display',\n          text:\n            'When a round is over a text is displayed stating who won and why (either the draw is empty or all players have been eliminated except one)',\n          alt: 'Page game bord lost',\n        },\n        clown: {\n          title: 'Showing the effect of the clown card',\n          text:\n            'When we discard a clown card, it allows us to see the card of an opponent who is thus briefly displayed on the screen',\n          alt: 'Page game bord clown',\n        },\n        select: {\n          title: 'Choice of a card and / or a player',\n          text:\n            'Some cards need to choose a player and possibly a card. This choice is made after clicking on the desired map. The effect of the card is applied when the form is validated.',\n          alt: 'Page game bord Choice of a card and / or a player',\n        },\n      },\n    },\n  },\n};\n","import { default as help } from './scenes/MenuContainer/components/Help/messages.js';\n\nlet messages = {\n  fr: {\n    LoginContainer: {\n      title: 'Love',\n      titleSpan: 'Letter',\n      slogan: 'Un superbe slogan',\n    },\n    Login: {\n      title: 'Connectez-vous pour commencer à jouer, seul ou avec vos amis !',\n      linkToRegister: \"S'inscrire !\",\n      Form: {\n        nameLabel: 'Votre nom :',\n        passwordLabel: 'Votre mot de passe :',\n        submitButton: 'Se connecter',\n      },\n    },\n    Register: {\n      title:\n        \"Pour créer un compte, débloquer des extensions et enregistrer vos meilleurs scores, c'est ici !\",\n      linkToLogin: \"J'ai déjà un compte\",\n      Form: {\n        nameLabel: 'Choisissez un nom :',\n        passwordLabel: 'Choisissez un mot de passe :',\n        passwordError: 'Votre mot de passe doit faire au moins 6 caractères',\n        submitButton: 'Se connecter',\n      },\n    },\n    MenuContainer: {\n      title: 'Love Letter',\n    },\n    MainMenu: {\n      title: 'Love Letter',\n      linkToJouer: 'Lancer une nouvelle partie',\n      linkToRejoindre: 'Rejoindre une partie',\n      linkToHelp: 'Aide',\n      linkToOptions: 'Options',\n      logout: 'Se déconnecter',\n      points: 'points',\n    },\n    NewGame: {\n      title: 'Création de partie',\n      backToMenu: 'Retour au menu',\n      startLink: 'Jouer',\n      player1: 'Joueur 1',\n      player2: 'Joueur 2',\n      player3: 'Joueur 3',\n      player4: 'Joueur 4',\n      player: 'Joueur',\n      IA_easy: 'Ordinateur facile',\n      IA_normal: 'Ordinateur moyen',\n      none: 'Aucun',\n    },\n    WaitGame: {\n      waiting: 'En attente de joueurs...',\n      waitingPlayer: 'En attente...',\n      IA_easy: 'Ordinateur facile',\n      IA_normal: 'Ordinateur moyen',\n    },\n    JoinGame: {\n      title: 'Rejoindre une partie',\n      backToMenu: 'Retour au menu',\n      joinLink: 'Rejoindre',\n      player1: 'Joueur 1',\n      player2: 'Joueur 2',\n      player3: 'Joueur 3',\n      player4: 'Joueur 4',\n      join: 'Rejoindre',\n      delete: 'Supprimer',\n      salon: 'Salon de ',\n      IA_easy: 'Ordinateur facile',\n      IA_normal: 'Ordinateur moyen',\n    },\n    Rankings: {\n      title: 'Classement',\n      backToMenu: 'Retour au menu',\n    },\n    Help: help.fr,\n    Histori: {\n      title: 'Une petite histoire',\n      backToMenu: 'Retour au menu',\n      text: {\n        text1:\n          'Dans un autre monde, à une autre époque, il était une fois un royaume dans lequel vivait une princesse.',\n        text2:\n          \"C'était une bonne âme, gentille avec toutes et tous, son royaume l’aimait.\",\n        text3:\n          'Deux jeunes hommes étaient tombés éperdument amoureux de la princesse, mais ils étaient incapables de rentrer dans le château.',\n        text4:\n          \"La seule chose qu'ils pouvaient faire, c'était envoyer des lettres d'amour.\",\n        text5:\n          \"A leur grand désarroi, ils se rendirent compte que n'importe qui pouvait envoyer des lettres à la princesse.\",\n        text6:\n          \"Ils décidèrent donc de partir à la recherche d'alliés parmi les servants du château, pour que leurs lettres arrivent personnellement à la princesse.\",\n      },\n    },\n    Game: {\n      wonGames: ' manche(s) gagnée(s)',\n      playing: 'est en train de jouer',\n      me_playing: 'A toi de jouer !',\n      me_immunity: 'Tu es protégé !',\n      immunity: 'Ce joueur est protégé !',\n      chooseACard: 'Choisis une carte',\n      chooseAPlayer: 'Choisis un joueur',\n      choosePlayerCard: 'Valider',\n      showHand: 'Carte du joueur : ',\n      auto_eliminated: \" s'est auto éliminé avec la carte \",\n      eliminated_by: ' a été éliminé(e) par ',\n      eliminated_with: ' avec la carte ',\n      winnerByElimination:\n        'Tous les joueurs ont été éliminés, sauf le gagnant de la manche, ',\n      winnerByEmptyPile:\n        'La pioche est vide. Le joueur avec la meilleure main gagne la manche : ',\n      winnerOfGame: ' a gagné la partie !',\n      rounds: 'Manche ',\n      rounds_2: ' sur ',\n      clown: 'Clown',\n      princess_prince: 'Princesse - Prince',\n      general: 'Général',\n      knight: 'Chevalier',\n      soldier: 'Soldat',\n      minister: 'Ministre',\n      sorcerer: 'Sorcier',\n      priest: 'Prêtre',\n      noPlayer: 'Aucun joueur présent',\n      alt: {\n        pile: 'pioche',\n        hand0: 'main joueur 0',\n        hand1: 'main joueur 1',\n        hand2: 'main joueur 2',\n        hand3: 'main joueur 3',\n        played_card0: 'carte joue par joueur 0',\n        played_card1: 'carte joue par joueur 1',\n        played_card2: 'carte joue par joueur 2',\n        played_card3: 'carte joue par joueur 3',\n      },\n    },\n    Credits: {\n      title: 'Crédits',\n    },\n  },\n  en: {\n    LoginContainer: {\n      title: 'Love',\n      titleSpan: 'Letter',\n      slogan: 'A great headline',\n    },\n    Login: {\n      title: 'Log in to start a game, alone or with your friends!',\n      linkToRegister: 'I need an account first !',\n      Form: {\n        nameLabel: 'Your name :',\n        passwordLabel: 'Your password :',\n        submitButton: 'Sign in',\n      },\n    },\n    Register: {\n      title: 'Create an account, unlock extensions and save your best scores!',\n      linkToLogin: \"I'd rather login !\",\n      Form: {\n        nameLabel: 'Your name:',\n        passwordLabel: 'Your password:',\n        passwordError: 'Your password must be at least 6 characters long',\n        submitButton: 'Sign up',\n      },\n    },\n    MenuContainer: {\n      title: 'Love Letter',\n    },\n    MainMenu: {\n      title: 'Love Letter',\n      linkToJouer: 'Launch a new game',\n      linkToRejoindre: 'Join a game',\n      linkToHelp: 'Help',\n      linkToOptions: 'Options',\n      logout: 'Log out',\n      points: 'points',\n    },\n    NewGame: {\n      title: 'Create a new game',\n      backToMenu: 'Back to menu',\n      startLink: 'Play',\n      player1: 'Player 1',\n      player2: 'Player 2',\n      player3: 'Player 3',\n      player4: 'Player 4',\n      player: 'Player',\n      IA_easy: 'Easy Computer',\n      IA_normal: 'Medium Computer',\n      none: 'None',\n    },\n    WaitGame: {\n      waiting: 'Waiting for players...',\n      waitingPlayer: 'Waiting...',\n      IA_easy: 'Easy Computer',\n      IA_normal: 'Medium Computer',\n    },\n    JoinGame: {\n      title: 'Join a game',\n      backToMenu: 'Back to menu',\n      joinLink: 'Join',\n      player1: 'Player 1',\n      player2: 'Player 2',\n      player3: 'Player 3',\n      player4: 'Player 4',\n      join: 'Join',\n      delete: 'Delete',\n      salon: 'Salon of ',\n      IA_easy: 'Easy Computer',\n      IA_normal: 'Medium Computer',\n    },\n    Rankings: {\n      title: 'Rankings',\n      backToMenu: 'Back to menu',\n    },\n    Help: help.en,\n    Histori: {\n      title: 'History',\n      backToMenu: 'Back to menu',\n      text: {\n        text1:\n          'In another world, at another time, there was once a kingdom in which lived a princess.',\n        text2: 'She was a good soul, kind to everyone, his kingdom loved him.',\n        text3:\n          'Two young men had fallen madly in love with the princess, but they were unable to enter the castle.',\n        text4: 'The only thing they could do was send love letters.',\n        text5:\n          'To their dismay, they realized that anyone could send letters to the princess.',\n        text6:\n          'They decided to go in search of allies among the servants of the castle, so that their letters arrive personally to the princess.',\n      },\n    },\n    Game: {\n      wonGames: ' won game(s)',\n      playing: 'is playing...',\n      me_playing: 'Your turn!',\n      me_immunity: \"You're protected!\",\n      immunity: 'This player is protected!',\n      choosePlayerCard: 'Choose',\n      chooseACard: 'Choose a card',\n      chooseAPlayer: 'Choose a player',\n      showHand: \"Player's card :\",\n      auto_eliminated: ' eliminated himself/herself with the card ',\n      eliminated_by: ' was eliminated by ',\n      eliminated_with: ' with the card ',\n      winnerByElimination:\n        'All players are eliminated, except the winner of the round, ',\n      winnerByEmptyPile:\n        'The pile is empty. The player with the best hand is the winner of the round: ',\n      winnerOfGame: ' won the game!',\n      rounds: 'Round ',\n      rounds_2: ' on ',\n      clown: 'Clown',\n      princess_prince: 'Princess - Prince',\n      general: 'General',\n      knight: 'Knight',\n      soldier: 'Solider',\n      minister: 'Minister',\n      sorcerer: 'Sorcerer',\n      priest: 'Priest',\n      noPlayer: 'No player present',\n      alt: {\n        pile: 'pile',\n        hand0: 'player hand 0',\n        hand1: 'player hand 1',\n        hand2: 'player hand 2',\n        hand3: 'player hand 3',\n        played_card0: 'card plays by player 0',\n        played_card1: 'card plays by player 1',\n        played_card2: 'card plays by player 2',\n        played_card3: 'card plays by player 3',\n      },\n    },\n    Credits: {\n      title: 'Credits',\n    },\n  },\n};\n\nexport default messages;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/****************************/\n/****Internationalization****/\n/****************************/\n\nimport { IntlProvider, addLocaleData } from 'react-intl';\n\nimport messages from './messages';\n\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\n\nimport { flattenMessages, getLanguage } from './utils';\n\nlet locale = getLanguage();\n\naddLocaleData([...en, ...fr]);\n\n/***********/\n/****App****/\n/***********/\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={flattenMessages(messages[locale])}>\n    <App />\n  </IntlProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}